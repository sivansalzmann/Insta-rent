[{"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\index.js":"1","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Router\\router.js":"2","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\RenterSearch.js":"3","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignUp.js":"4","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignIn.js":"5","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerPage.js":"6","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetAddForm.js":"7","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerAssetsList.js":"8","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\App.js":"9","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\RenterPage.js":"10","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\AssetSearchForm.js":"11","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\PersonalDetails.js":"12","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\AssetsList.js":"13","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\RenterList.js":"14","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerAssetCard.js":"15","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\Contract.js":"16","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\NavBar.js":"17","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Footer.js":"18","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\AssetDeatils.js":"19","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PopUp.js":"20","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Message.js":"21","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\AssetCard.js":"22","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\AssetPage.js":"23","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\MessageList.js":"24","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\Message.js":"25","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerPage1.js":"26","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PersonalDeatils.js":"27","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AddAsset.js":"28"},{"size":304,"mtime":1611902510081,"results":"29","hashOfConfig":"30"},{"size":1742,"mtime":1612597621469,"results":"31","hashOfConfig":"30"},{"size":392,"mtime":1612448168882,"results":"32","hashOfConfig":"30"},{"size":2006,"mtime":1612452106206,"results":"33","hashOfConfig":"30"},{"size":2745,"mtime":1612615317665,"results":"34","hashOfConfig":"30"},{"size":5422,"mtime":1612608483121,"results":"35","hashOfConfig":"30"},{"size":9362,"mtime":1612533355812,"results":"36","hashOfConfig":"30"},{"size":597,"mtime":1612506724458,"results":"37","hashOfConfig":"30"},{"size":1677,"mtime":1612597621406,"results":"38","hashOfConfig":"30"},{"size":9057,"mtime":1612597621455,"results":"39","hashOfConfig":"30"},{"size":6017,"mtime":1612540011621,"results":"40","hashOfConfig":"30"},{"size":2637,"mtime":1612452106176,"results":"41","hashOfConfig":"30"},{"size":523,"mtime":1612448168885,"results":"42","hashOfConfig":"30"},{"size":2301,"mtime":1612533530955,"results":"43","hashOfConfig":"30"},{"size":1916,"mtime":1612507270542,"results":"44","hashOfConfig":"30"},{"size":2502,"mtime":1612448168938,"results":"45","hashOfConfig":"30"},{"size":446,"mtime":1612448168877,"results":"46","hashOfConfig":"30"},{"size":330,"mtime":1612448168871,"results":"47","hashOfConfig":"30"},{"size":1321,"mtime":1612540011604,"results":"48","hashOfConfig":"30"},{"size":1730,"mtime":1612505427520,"results":"49","hashOfConfig":"30"},{"size":1613,"mtime":1612505427499,"results":"50","hashOfConfig":"30"},{"size":1595,"mtime":1612540011648,"results":"51","hashOfConfig":"30"},{"size":1349,"mtime":1612505427531,"results":"52","hashOfConfig":"30"},{"size":518,"mtime":1612540011713,"results":"53","hashOfConfig":"30"},{"size":1238,"mtime":1612597621415,"results":"54","hashOfConfig":"30"},{"size":4658,"mtime":1612597621445,"results":"55","hashOfConfig":"30"},{"size":2205,"mtime":1612597621392,"results":"56","hashOfConfig":"30"},{"size":5722,"mtime":1612597621428,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"102jj4c",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\index.js",[],["127","128"],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Router\\router.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\RenterSearch.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignUp.js",["129","130"],"import react ,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport './SignIn.css';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport PersonalDetails from './PersonalDetails';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        display: 'flex',\r\n        marginLeft: '30%',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n  },\r\n}}));\r\n\r\nexport default function SignUp (props) { \r\n\r\n  const classes = useStyles();\r\n\r\n  const [user,setUser] = useState(\"\");\r\n\r\n  const [inputs, setInputs] = useState({\r\n    FirstName: \"\",\r\n    LastName: \"\",\r\n    Gender: \"\",\r\n    Phone: \"\",\r\n    Email: \"\",\r\n})\r\n\r\n\r\nconst handleChange = input => event => {\r\n  event.preventDefault();\r\n    setInputs({ ...inputs, [input]: event.target.value });\r\n}\r\n\r\nconst onSubmit = event => {\r\n  event.preventDefault();\r\n\r\n  console.log('here');\r\n  let pack =  inputs;\r\n  if(setUser !== \"\" )\r\n      pack = {...pack, setUser : setUser};\r\n  console.log(pack);\r\n}\r\n\r\n\r\n    return (\r\n      <div className={'background'}>\r\n        <NavBar />\r\n        <div className={\"signInContainer\"}>\r\n          <h1>SIGN UP</h1>\r\n          <form className={classes.root} onSubmit={onSubmit} autoComplete=\"off\">\r\n          <PersonalDetails\r\n            handleChange={handleChange}\r\n            values={inputs}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSubmit}\r\n            style={{fontSize:'15px',fontWeight:'bold',marginLeft: '15%',marginTop:'5%',width:'60%'}}\r\n          >\r\n            Sign Up\r\n        </Button>\r\n        </form>\r\n      </div>\r\n      <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignIn.js",["131","132"],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerPage.js",["133","134","135","136","137","138","139","140"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport AssetList from '../HomePage/AssetsList';\r\nimport { Link } from 'react-router-dom';\r\nimport MessageOutlinedIcon from '@material-ui/icons/MessageOutlined';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport OwnerAssetsList from './OwnerAssetsList';\r\nimport RenterList from './RenterList';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PopUp from '../All/PopUp';\r\n\r\nconst ownerId = 6;\r\nconst OwnerPage = (props) => {\r\n\t// const [items, setItems] = useState(AssetsData.items);\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [itemToEdit, setItemToEdit] = useState(null);\r\n\t// const [ownerId,setOwnerId] = useState(\"\");\r\n\tconst [ownerAssetsList, setOwnerAssetsList] = useState([]);\r\n\tconst [renterNumb, setRenterNumb] = useState([]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://instarent-1st.herokuapp.com/api/assets?OwnerId=${ownerId}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetRenterNumb(result)\r\n\t\t\t\tsetOwnerAssetsList(result)\r\n\t\t\t})\r\n\r\n\t}, [])\r\n\r\n\tconst editAsset = (assetId) => {\r\n\t\t// fetch(`https://instarent-1st.herokuapp.com/api/assets/${assetId}`, {\r\n\t\t// \tmethod: 'PUT',\r\n\t\t// \tbody: JSON.stringify(),\r\n\t\t// headers: {'Content-Type': 'application/json'},\r\n\t\t// })\r\n\t\t// \t.then(response => response.json())\r\n\t\t// \t.then(result => {\r\n\t\t// \t\tsetAsset(result)\r\n\t\t// \t})\r\n\t\tconsole.log(assetId)\r\n\t}\r\n\r\n\r\n\tconst deleteAsset = (assetId) => {\r\n\t\tfetch(`https://instarent-1st.herokuapp.com/api/assets/${assetId}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconsole.log(result)\r\n\t\t\t\twindow.location.reload()\r\n\t\t\t})\r\n\t\t// setItems(prevState => ({\r\n\t\t// \titems: prevState.items.filter(item => item.id !== target)\r\n\t\t// }))\r\n\t\tconsole.log(assetId)\r\n\t}\r\n\r\n\t// const editItem = (id) => {\r\n\t// \tconst item = this.state.items.filter(item => item.id === id)[0];\r\n\t// \tsetEditing(() => ({\r\n\t// \t\tediting: true,\r\n\t// \t\titemToEdit: item\r\n\t// \t}));\r\n\t// }\r\n\r\n\t// const showAsset = (id) => {\r\n\t// \tconst item = this.state.items.filter(item => item.id === id)[0];\r\n\t// \tconsole.log(item);\r\n\t// }\r\n\r\n\t// add(item) {\r\n\t// \tthis.setState(prevState => ({\r\n\t// \t\titems: [\r\n\t// \t\t\t...prevState.items, {\r\n\t// \t\t\t\tid: this.nextId(prevState.items),\r\n\t// \t\t\t\tdate: item.date,\r\n\t// \t\t\t\tlocation: item.location,\r\n\t// \t\t\t\tclient: item.client\r\n\t// \t\t\t}]\r\n\t// \t}))\r\n\t// }\r\n\r\n\t// update(updatedItem) {\r\n\t// \tthis.setState(prevState => ({\r\n\t// \t\titems: prevState.items.map(\r\n\t// \t\t\titem => item.id === this.state.itemToEdit.id ? { id: item.id, client: updatedItem.client, date: updatedItem.date, location: updatedItem.location } : item\r\n\t// \t\t),\r\n\t// \t\tediting: false,\r\n\t// \t\titemToEdit: null\r\n\t// \t}));\r\n\t// }\r\n\r\n\t// const nextId = (items = []) => {\r\n\t// \tlet max = items.reduce((prev, curr) => prev.id > curr.id ? prev.id : curr.id, 0);\r\n\t// \treturn ++max;\r\n\t// }\r\n\r\n\tconst onAddAsset = (data) => {\r\n\t\tconsole.log(data)\r\n\t}\r\n\t// const onChange = () => {\r\n\t// \tsetCountry(\"\");\r\n\t// \tsetCity(\"\");\r\n\t// \tsetNeighborhood(\"\");\r\n\t// \tsetStreet(\"\");\r\n\t// \tsetZip(\"\");\r\n\t// \tsetSquareFeet(\"\");\r\n\t// \tsetRooms(\"\");\r\n\t// \tsetCondition(\"\");\r\n\t// \tsetParking(\"\");\r\n\t// \tsetElevator(\"\");\r\n\t// \tsetPetsAllowed(\"\");\r\n\t// \tsetPrice(\"\");\r\n\t// \tsetAvilability(\"\");\r\n\t// \tsetDescription(\"\");\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={\"renterMainPage\"}>\r\n\t\t\t\t<div className={\"navBar\"}>\r\n\t\t\t\t\t<h1><Link to={{ pathname: \"/\" }}>InstaRent</Link></h1>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><Link to={{ pathname: \"/\" }}>HOME</Link></li>\r\n\t\t\t\t\t\t<li><Link to={{ pathname: \"/\" }}>APPERTMANTS</Link></li>\r\n\t\t\t\t\t\t<li><Link to={{ pathname: \"/\" }}>PROFILE</Link></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<h1>Youe Assets</h1>\r\n\t\t\t\t\t<Link to={{ pathname: \"/AssetAddForm\", submit: onAddAsset }}>\r\n\t\t\t\t\t\t<AddCircleIcon className=\"plus\" />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<OwnerAssetsList ownerAssetsList={ownerAssetsList} onClickEdit={editAsset} onClickDelete={deleteAsset} />\r\n\t\t\t\t\t<h1>Your assets in proccess</h1>\r\n\t\t\t\t\t<RenterList renterNumb={renterNumb} />\r\n\t\t\t\t\t{/* <PopUp onSubmit={() => editAsset(false)} title={\"Edit Asset\"} open={open} closePopup={() => setOpen(false)}>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"Country\" size=\"large\" onChange={(event) => setCountry(event.target.value)} value={country} name=\"Country\" /></div>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"City\" size=\"large\" onChange={(event) => setCity(event.target.value)} value={city} name=\"City\" /></div>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"Neighborhood\" size=\"large\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} name=\"Neighborhood\" /></div>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"Street\" size=\"large\" onChange={(event) => setStreet(event.target.value)} value={street} name=\"Street\" /></div>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"Zip\" size=\"large\" onChange={(event) => setZip(event.target.value)} value={zip} name=\"Zip\" /></div>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"SquareFeet\" size=\"large\" onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} name=\"SquareFeet\" /></div>\r\n\t\t\t\t\t\t<div><TextField className=\"input\" label=\"Rooms\" size=\"large\" onChange={(event) => setRooms(event.target.value)} value={rooms} name=\"Rooms\" /></div>\r\n\t\t\t\t\t</PopUp> */}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n\r\n\r\n\r\n}\r\n\r\nexport default OwnerPage;\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetAddForm.js",["141","142"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AssetAddForm = (props) => {\r\n    \r\n    \r\n    \r\n    // const addNewAsset = () => {\r\n    //     const body = {\r\n    //         \tOwnerId: OwnerId,\r\n    //         asset: asset\r\n    //     }\r\n    //     fetch(`https://instarent-1st.herokuapp.com/api/assets`),\r\n    //         {headers: {'Content-Type': 'application/json'}, method: 'POST', body: JSON.stringify(body)})\r\n    //         .then(response => response.json())\r\n    //         .then(result => {\r\n    //             setAsset(result)\r\n    //             setInputMessage('')\r\n    //         })\r\n    // }\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n    const [squareFeet, setSquareFeet] = useState(\"\");\r\n    const [rooms, setRooms] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [parking, setParking] = useState(\"\");\r\n    const [elevator, setElevator] = useState(\"\");\r\n    const [petsAllowed, setPetsAllowed] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [avilability, setAvilability] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n//     // useEffect(() => {\r\n//     //     if (props.initialData) {\r\n//     //         setCountry(props.initialData.country);\r\n//     //         setCity(props.initialData.city);\r\n//     //         setNeighborhood(props.initialData.neighborhood);\r\n//     //         setStreet(props.initialData.street);\r\n//     //         setZip(props.initialData.zip);\r\n//     //         setSquareFeet(props.initialData.squareFeet);\r\n//     //         setRooms(props.initialData.rooms);\r\n//     //         setCondition(props.initialData.condition);\r\n//     //         setParking(props.initialData.condition);\r\n//     //         setElevator(props.initialData.elevator);\r\n//     //         setPetsAllowed(props.initialData.petsAllowed);\r\n//     //         setPrice(props.initialData.price);\r\n//     //         setAvilability(props.initialData.avilability);\r\n//     //         setDescription(props.initialData.description);\r\n\r\n//     //     }\r\n//     // }, [props.initialData]);\r\n\r\n    const formDataIsValid = () => {\r\n\r\n        let errors = [];\r\n        if (country === \"\" || city === \"\" || neighborhood === \"\" || street === \"\" || zip === \"\" || rooms === \"\" || squareFeet === \"\" || price === \"\" || description === \"\")\r\n            errors.push(\"All fields are requierd, please make sure all fields are filled.\")\r\n\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n\r\n\r\n    }\r\n\r\n    const onSubmit = () => {\r\n\r\n        if (formDataIsValid()) {\r\n            props.location.submit({ country, city, neighborhood, street, zip, squareFeet, rooms, condition, parking, elevator, petsAllowed, price, avilability, description });\r\n            setCountry(\"\");\r\n            setCity(\"\");\r\n            setNeighborhood(\"\");\r\n            setStreet(\"\");\r\n            setZip(\"\");\r\n            setSquareFeet(\"\");\r\n            setRooms(\"\");\r\n            setCondition(\"\");\r\n            setParking(\"\");\r\n            setElevator(\"\");\r\n            setPetsAllowed(\"\");\r\n            setPrice(\"\");\r\n            setAvilability(\"\");\r\n            setDescription(\"\");\r\n        }\r\n        fetch(`https://instarent-1st.herokuapp.com/api/assets`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n            City: city,\r\n            Street: street,\r\n            Zip: zip,\r\n            Country: country,\r\n            Neighborhood: neighborhood,\r\n            Rooms: rooms,\r\n            SquareFeet: squareFeet,\r\n            Parking: parking,\r\n            Elevator: elevator,\r\n            PetsAllowed: petsAllowed,\r\n            Condition: condition,\r\n            Price: price,\r\n            Avilability: avilability,\r\n            Description: description,\r\n            // OwnerId: {ownerId},\r\n            }),\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(result => {\r\n\r\n\t\t\t})\r\n    }\r\n\r\n    return (\r\n        <div className={'assetForm'}>\r\n            <h1>Add new asset</h1>\r\n            <form noValidate autoComplete=\"off\">\r\n                <div className=\"formLeft\">\r\n                    <div className=\"country wide\">\r\n                        <label>Country</label>\r\n                        <input type=\"text\" name=\"country\" onChange={(event) => setCountry(event.target.value)} value={country} placeholder=\"Country\" />\r\n                    </div>\r\n                    <div className=\"city wide\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" name=\"city\" onChange={(event) => setCity(event.target.value)} value={city} placeholder=\"City\" />\r\n                    </div>\r\n                    <div className=\"neighborhood wide\">\r\n                        <label>Neighborhood</label>\r\n                        <input type=\"text\" name=\"neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} placeholder=\"Neighborhood\" />\r\n                    </div>\r\n                    <div className=\"street wide\">\r\n                        <label>Street</label>\r\n                        <input type=\"text\" name=\"street\" onChange={(event) => setStreet(event.target.value)} value={street} placeholder=\"Street\" />\r\n                    </div>\r\n                    <div className=\"zsr wide\">\r\n                        <div className=\"zip\">\r\n                            <label>Zip</label>\r\n                            <input type=\"number\" name=\"zip\" onChange={(event) => setZip(event.target.value)} value={zip} placeholder=\"Zip\" />\r\n                        </div>\r\n                        <div className=\"squareFeet\">\r\n                            <label>Square Feet</label>\r\n                            <input type=\"number\" name=\"squareFeet\" onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} placeholder=\"SquareFeet\" />\r\n                        </div>\r\n                        <div className=\"rooms\">\r\n                            <label>Rooms</label>\r\n                            <input type=\"select\" name=\"rooms\" onChange={(event) => setRooms(event.target.value)} value={rooms} placeholder=\"Number of rooms\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formRight\">\r\n                    <div className=\"condition\">\r\n                        <label>Condition</label>\r\n                        <select type=\"select\" name=\"condition\" onChange={(event) => setCondition(event.target.value)} value={condition} placeholder=\"Condition\" >\r\n                            <option value=\"Great\">Great</option>\r\n                            <option value=\"Good\">Good</option>\r\n                            <option value=\"Bad\">Bad</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"extras\">\r\n                        <label>Extras</label>\r\n                        <div className=\"parking\">\r\n                            <input type=\"checkbox\" name=\"parking\" onChange={(event) => setParking(event.target.value)} value={true} />\r\n                            <label className=\"check\">Parking</label>\r\n                        </div>\r\n                        <div className=\"elevator\">\r\n                            <input type=\"checkbox\" name=\"elevator\" onChange={(event) => setElevator(event.target.value)} value={true} />\r\n                            <label className=\"check\">Elevator</label>\r\n                        </div>\r\n                        <div className=\"petsAllowed\">\r\n                            <input type=\"checkbox\" name=\"petsAllowed\" onChange={(event) => setPetsAllowed(event.target.value)} value={true} />\r\n                            <label className=\"check\" >Pets Allowed</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <label>Price</label>\r\n                        <input type=\"number\" name=\"price\" onChange={(event) => setPrice(event.target.value)} value={price} placeholder=\"price\" />\r\n                    </div>\r\n                    <div className=\"avilability\">\r\n                        <label>Avilability</label>\r\n                        <input type=\"date\" name=\"avilability\" onChange={(event) => setAvilability(event.target.value)} value={avilability} />\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <label>Description</label>\r\n                        <input type=\"textarea\" name=\"description\" onChange={(event) => setDescription(event.target.value)} value={description} rows=\"4\" cols=\"50\" placeholder=\"Enter Description here\" />\r\n                    </div>\r\n                </div>\r\n                <Link to={{ pathname: \"/OwnerPage\" }}>\r\n                    <Button variant=\"contained\" className={'button'} onClick={onSubmit}>\r\n                        Add\r\n                </Button>\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AssetAddForm;","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerAssetsList.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\App.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\RenterPage.js",["143"],"import React, {useEffect, useState} from 'react';\r\nimport './RenterPage.css';\r\nimport { Button } from '@material-ui/core';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Contract from './Contract';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport MessageList from '../Message/MessageList';\r\nimport AssetDeatils from '../All/AssetDeatils';\r\nimport PrsonalDeatils from '../All/PersonalDeatils';\r\n\r\n\r\nconst userId = '3'; //change it\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div role=\"tabpanel\" hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other} >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n          'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\nexport default function RenterPage(props) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n    const [renterMessages, setRenterMessages] = useState(\"\");\r\n    const [user,setUser] = useState(\"\");\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n    const [renterDeatilsId,setRenterDeatilsId] = useState(\"\");\r\n    const [value, setValue] = useState(0);\r\n    const [message,setMessage] = useState(\"\");\r\n    const [timestamp,setTimestamp] = useState(\"\");\r\n    const [wantedAsset,setWantedAsset] = useState(\"\");\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    const handleChangeIndex = (index) => {\r\n      setValue(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n      // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n        fetch(`http://localhost:3000/api/users/${userId}`)\r\n          .then(response => response.json())\r\n          .then(result =>  {\r\n             setUser(result)\r\n          })\r\n          \r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n      fetch(`http://localhost:3000/api/renterDeatils/${userId}`)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n          setRenterDeatils(result)\r\n          setRenterDeatilsId(result.id)\r\n        })\r\n        \r\n    }, [renterDeatils])\r\n\r\n    useEffect(() => {\r\n        // fetch(`https://instarent-1st.herokuapp.com/api/assets?RenterId=${userId}`)\r\n        fetch(`http://localhost:3000/api/assets?RenterId=${userId}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n              setWantedAsset(result)\r\n            })\r\n    }, [wantedAsset])\r\n\r\n    useEffect(() => {\r\n      // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n        fetch(`http://localhost:3000/api/messages?RenterId=${userId}`)\r\n          .then(response => response.json())\r\n          .then(result =>  {\r\n            setRenterMessages(result)\r\n            // console.log(result)\r\n          })\r\n          \r\n      }, [renterMessages])\r\n\r\n    const addMessage = () => {\r\n      let today = new Date();\r\n      setTimestamp(today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate());\r\n      const body = { Message: message , RenterId:userId, OwnerId:wantedAsset[0].OwnerId,Timestamp:timestamp};\r\n      console.log(body);\r\n      // fetch(`https://instarent-1st.herokuapp.com/api/messages`, {\r\n        fetch(`http://localhost:3000/api/messages` ,{\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setOpenMessage(false)\r\n            setMessage(result)\r\n            setMessage(\"\")\r\n        });\r\n    }\r\n\r\n    return (\r\n\t\t<div className={\"renterMainPage\"}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<div className={\"renterPageContainer\"}>\r\n        <div className={\"personalDeatilsContainer\"}>\r\n           <PrsonalDeatils FirstName={user.FirstName} LastName={user.LastName} Gender={user.Gender} Age={user.Age} Country={user.Country} ImageUrl={user.ImageUrl} JobTitle={renterDeatils.JobTitle} idRenter={renterDeatils.id}/>\r\n        </div>\r\n      <div className={\"containerRenter\"}>\r\n          <div className={\"currentContainer\"}>\r\n              <div className={\"curStatus\"}>\r\n                  <h1>Current status</h1>\r\n                  <p>Looking for rent appetmant in {renterDeatils.FavoriteCountry} </p>\r\n              </div>\r\n              <div className={\"curBud\"}>\r\n                  <h1>Cuurent budget</h1>\r\n                  <p>{renterDeatils.Budget} $</p>\r\n              </div>\r\n          </div>\r\n          <div className={\"progress\"}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\r\n                <Tab label=\"In progress\" {...a11yProps(0)} />\r\n                <Tab label=\"Asset place deatils\" {...a11yProps(1)}  />\r\n                <Tab label=\"Messages to my owner\" {...a11yProps(2)}  />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={value}onChangeIndex={handleChangeIndex}>\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <h1 style={{fontFamily:'Lato'}}>Rent asset progress</h1>\r\n            <div>\r\n                <Stepper active orientation=\"vertical\">\r\n                    <Step >\r\n                        <StepLabel style={{fontFamily:'Lato'}}>Request recived</StepLabel>\r\n                        <StepContent>\r\n                        <Typography style={{fontFamily:'Lato'}}>The owner of your wantes asset saw your reques and will be in touch soon</Typography>\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setOpen(true)}>Asset deatils</Button>\r\n                        </StepContent>\r\n                    </Step>\r\n                    <Step active>\r\n                        <StepLabel style={{fontFamily:'Lato'}}>Asset rentering in proccess</StepLabel>\r\n                        <StepContent>\r\n                        <Typography style={{fontFamily:'Lato'}}>You can talk anytime you want with the owner in the chat and review on tour contract now</Typography>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setOpenMessage(true)}>message to owner</Button>\r\n                            <PopUp onSubmit={addMessage} title={\"Send Message\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true}>\r\n                                <TextField label=\"Message\" value={message} onChange={e => setMessage(e.target.value)} fullWidth required/>\r\n                            </PopUp>\r\n                            <Contract/>\r\n                        </StepContent>\r\n                    </Step>\r\n                    <Step >\r\n                        <StepLabel style={{fontFamily:'Lato'}}>Enjoy in your new journey!</StepLabel>\r\n                        <StepContent>\r\n                        <Typography style={{fontFamily:'Lato'}}></Typography>\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\">Chat</Button>\r\n                        <Contract/>\r\n                        </StepContent>\r\n                    </Step>\r\n                </Stepper>\r\n              </div> \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}> \r\n              From google api\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              <MessageList messageList={renterMessages} renter={true}/>\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div> \r\n      </div>\r\n    </div>\r\n    <PopUp onSubmit={() => setOpen(false)} wantAssetBtn={false} title={wantedAsset.Country} open={open} closePopup={() => setOpen(false)} sendBtn={false}>\r\n      <AssetDeatils item={wantedAsset[0]} />\r\n    </PopUp>\r\n    <Footer/>\r\n\t</div>\r\n\t);\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\AssetSearchForm.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\PersonalDetails.js",["144","145","146","147","148","149","150"],"import react ,{ useState } from 'react';\r\nimport Axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './SignIn.css';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        display: 'flex',\r\n        marginLeft: '30%',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n  },\r\n}}));\r\n\r\nexport default function SignUp (props) { \r\n\r\n  const classes = useStyles();\r\n\r\n  const { FirstName, LastName, Gender, Email, Phone } = props.values;\r\n\r\n    return (\r\n        <>\r\n          <TextField \r\n              id=\"FirstName\" \r\n              label=\"First name\" \r\n              name=\"First name\"\r\n              defaultValue={FirstName}\r\n              onChange={props.handleChange('FirstName')}\r\n              fullWidth\r\n          />\r\n          <TextField \r\n              id=\"LastName\" \r\n              label=\"Last name\" \r\n              name=\"Last name\"\r\n              defaultValue={LastName}\r\n              onChange={props.handleChange('LastName')}\r\n              fullWidth\r\n          />\r\n          <TextField \r\n              id=\"Email\" \r\n              label=\"Email\" \r\n              name=\"Email\"\r\n              defaultValue={Email}\r\n              onChange={props.handleChange('Email')}\r\n              fullWidth\r\n          />\r\n          <TextField \r\n              id=\"Phone\" \r\n              label=\"Phone\" \r\n              name=\"Phone\"\r\n              defaultValue={Phone}\r\n              onChange={props.handleChange('Phone')}\r\n              fullWidth\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"Gender\">Gender</InputLabel>\r\n            <Select \r\n              labelId=\"Gender\" \r\n              id=\"Gender\"\r\n              defaultValue={Gender}\r\n              onChange={props.handleChange('Gender')}\r\n              fullWidth\r\n              >\r\n              <MenuItem value={\"Male\"}>Male</MenuItem>\r\n              <MenuItem value={\"Female\"}>Female</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </>\r\n    );\r\n  }\r\n  \r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\AssetsList.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\RenterList.js",["151"],"import react, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData({props.forRentList.Phone}),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nexport default function RenterList() {\r\n  const classes = useStyles();\r\n  const renterNumb =9\r\n  const [renterList, setRentList] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/users?id=${renterNumb}`)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setRentList(result)\r\n        })\r\n  \r\n  }, [])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Asset number</TableCell>\r\n            <TableCell align=\"right\">Renter Name</TableCell>\r\n            <TableCell align=\"right\">Phone</TableCell>\r\n           \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {renterList.map((renterList) => (\r\n            <TableRow key={renterList.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {renterList.name}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{renterList.id}</TableCell>\r\n              <TableCell align=\"left\">{renterList.FirstName} {renterList.LastName}</TableCell>\r\n              <TableCell align=\"left\">{renterList.Phone}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerAssetCard.js",["152"],"import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OwnerPage from './OwnerPage';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 300,\r\n        margin: '2%',\r\n    },\r\n\r\n});\r\n\r\n\r\nexport default function OwnerAssetCard(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia component=\"img\" height=\"140\" image=\"https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fspecials-images.forbesimg.com%2Fimageserve%2F1026205392%2F960x0.jpg%3Ffit%3Dscale\" title=\"Referrals\" />\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{ fontFamily: 'Lato' }}>\r\n                    {props.item.Description}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" component=\"subtitle2\" style={{ fontFamily: 'Lato', fontWeight: 'bold' }}>\r\n                    {props.item.Country}\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" style={{ fontFamily: 'Lato', fontWeight: 'bold' }}>\r\n                    {props.item.Price} / per month\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" style={{ fontFamily: 'Lato', fontWeight: 'bold' }}>\r\n                    Avilable from {props.item.Avilability}\r\n                </Typography>\r\n                <EditOutlinedIcon onClick={() => props.onClickEdit(props.item.id)}/>\r\n                <DeleteOutlineIcon onClick={() => props.onClickDelete(props.item.id)} />\r\n            </CardContent>\r\n        </Card>\r\n\r\n\r\n    );\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\Contract.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\NavBar.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Footer.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\AssetDeatils.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PopUp.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Message.js",[],["153","154"],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\AssetCard.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\AssetPage.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\MessageList.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\Message.js",["155"],"import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '95%',\r\n        margin: '2%',\r\n    },\r\n    \r\n});\r\n\r\n\r\nconst answerBtn = () => {\r\n    return (\r\n        <Button variant=\"contained\" color=\"primary\">\r\n            Answer\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default function AssetCard (props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                    {props.item.Timestamp}\r\n                </Typography>\r\n                <div>\r\n                <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                    <p>{props.item.Message}</p>\r\n                </Typography>\r\n                </div>\r\n                {answerBtn()}\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerPage1.js",["156"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NavBar from '../All/NavBar';\r\nimport Footer from '../All/Footer';\r\nimport './OwnerPage.css';\r\nimport PrsonalDeatils from '../All/PersonalDeatils';\r\nimport AssetList from '../HomePage/AssetsList';\r\nimport MessageList from '../Message/MessageList';\r\nimport { Button } from '@material-ui/core';\r\nimport AddAsset from './AddAsset';\r\n\r\nconst ownerId = 2;\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `scrollable-auto-tab-${index}`,\r\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n\r\n\r\nexport default function OwnerPage1() {\r\n\r\n    const [user,setUser] = useState(\"\");\r\n    const [assets,setAssets] = useState(\"\");\r\n    const [messages,setOwnerMessages] = useState(\"\");\r\n    const [value, setValue] = useState(0);\r\n    \r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n          fetch(`http://localhost:3000/api/users/${ownerId}`)\r\n            .then(response => response.json())\r\n            .then(result =>  {\r\n               setUser(result)\r\n            })\r\n            \r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n          fetch(`http://localhost:3000/api/assets?OwnerId=${ownerId}`)\r\n            .then(response => response.json())\r\n            .then(result =>  {\r\n               setAssets(result)\r\n            })\r\n            \r\n    }, [assets])\r\n\r\n    useEffect(() => {\r\n        // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n          fetch(`http://localhost:3000/api/messages?OwnerId=${ownerId}`)\r\n            .then(response => response.json())\r\n            .then(result =>  {\r\n                setOwnerMessages(result)\r\n              // console.log(result)\r\n            })\r\n            \r\n        }, [messages])\r\n\r\n  return (\r\n    <div className={\"ownerMainPage\"}>\r\n        <NavBar />\r\n      <div className={\"containerOwner\"}>\r\n          <div className={\"personalDet\"}>\r\n              <PrsonalDeatils FirstName={user.FirstName} LastName={user.LastName} Gender={user.Gender} Age={user.Age} Country={user.Country} ImageUrl={user.ImageUrl}/>\r\n          </div>\r\n          <div className={\"containerOptions\"}>\r\n          <div className={\"currentContainer\"}>\r\n              <div className={\"curStatus\"}>\r\n                  <h1>Total number of assets</h1>\r\n                  <p>4</p>\r\n              </div>\r\n              <div className={\"curBud\"}>\r\n                  <h1>Total number of assers in proccess</h1>\r\n                  <p>2</p>\r\n              </div>\r\n          </div>\r\n            <div className={\"progressOwner\"}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"scrollable\" scrollButtons=\"auto\" >\r\n                    <Tab label=\"My assets\" {...a11yProps(0)} />\r\n                    <Tab label=\"Assets in proccess\" {...a11yProps(1)} />\r\n                    <Tab label=\"My messages\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0}>\r\n                    <AddAsset />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                  <h2>My assets</h2>\r\n                  <AssetList assetsList={assets} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <MessageList messageList={messages} />\r\n                </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer />\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PersonalDeatils.js",["157","158"],"import React, {useEffect, useState} from 'react';\r\nimport './PrsonalDeatils.css';\r\n// import profileImg from './Media/profile.png'\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n  \r\nexport default function RenterPage(props) {\r\n\r\n\r\n    const [openEdit,setOpenEdit] = useState(false);\r\n    const [jobTitle,setJob] = useState(\"\");\r\n    const [budget,setBudget] = useState(\"\");\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n\r\n\r\n    const editUser = () => {\r\n        const body = { JobTitle: jobTitle,Budget:budget};\r\n        console.log(body);\r\n        // fetch(`https://instarent-1st.herokuapp.com/api/users/${user.id}`, {\r\n        fetch(`http://localhost:3000/api/renterDeatils/${props.idRenter}` ,{\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n          .then(response => response.json())\r\n          .then(result => {\r\n              setOpenEdit(false);\r\n              setRenterDeatils(result)\r\n              setJob(\"\")\r\n              setBudget(\"\")\r\n          });\r\n      }\r\n\r\n    return (\r\n        <div className={\"personalDeatils\"}>\r\n            <img src={props.ImageUrl} alt=\"profile\" />\r\n            <h1>{props.FirstName} {props.LastName}</h1>\r\n            <h3>{props.JobTitle}</h3>\r\n            <div className={\"line\"}></div>\r\n            <p>Gender</p>\r\n            <span>{props.Gender}</span>\r\n            <p>Age</p>\r\n            <span>{props.Age}</span>\r\n            <p>Country</p>\r\n            <span>{props.Country}</span>\r\n            <div><Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>Edit</Button></div>   \r\n            <PopUp onSubmit={editUser} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true}>\r\n                <TextField label=\"JobTitle\" value={jobTitle} onChange={e => setJob(e.target.value)} fullWidth required/>\r\n                <TextField label=\"Budget\" value={budget} onChange={e => setBudget(e.target.value)} fullWidth required/>\r\n            </PopUp>\r\n        </div>\r\n\r\n\t);\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AddAsset.js",["159","160"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst ownerId = 2;\r\n\r\nexport default function AddAsset() {\r\n\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n    const [squareFeet, setSquareFeet] = useState(\"\");\r\n    const [rooms, setRooms] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [parking, setParking] = useState(false);\r\n    const [elevator, setElevator] = useState(false);\r\n    const [petsAllowed, setPetsAllowed] = useState(false);\r\n    const [price, setPrice] = useState(\"\");\r\n    const [avilability, setAvilability] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n    const [newAsset, setNewAsset] = useState(\"\");\r\n    const [add,setOpenAdd] = useState(false);\r\n\r\n  const addAsset = () => {\r\n    const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: ownerId,UrlPicture:imageUrl};\r\n    console.log(body);\r\n    fetch(`http://localhost:3000/api/assets`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body),\r\n\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(result => {\r\n            setOpenAdd(false);\r\n            setNewAsset(result);\r\n            setCountry(\"\");\r\n            setCity(\"\");\r\n            setNeighborhood(\"\");\r\n            setStreet(\"\");\r\n            setZip(\"\");\r\n            setSquareFeet(\"\");\r\n            setRooms(\"\");\r\n            setCondition(\"\");\r\n            setParking(false);\r\n            setElevator(false);\r\n            setPetsAllowed(false);\r\n            setPrice(\"\");\r\n            setAvilability(\"\");\r\n            setDescription(\"\");\r\n            setImageUrl(\"\");\r\n\t\t})\r\n    }\r\n\r\n  return (\r\n    <div className={\"addAssetContainer\"}>\r\n\r\n    <Fab color=\"primary\" aria-label=\"add\" className={\"addBut\"} onClick={() => setOpenAdd(true)}>\r\n    <AddIcon />\r\n  </Fab>\r\n  <PopUp onSubmit={addAsset} title={\"Add asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true}>\r\n        <div className={\"addAssetForm\"}>\r\n            <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth/>\r\n            <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth/>\r\n            <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n            <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n            <div className={\"rowOptions\"}>\r\n                <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n                <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n                <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n            </div>\r\n            <div className={\"rowOptions\"}>\r\n                <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} />\r\n                <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} />\r\n            </div>\r\n            <FormControl fullWidth > \r\n                        <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n                            <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n                                <option aria-label=\"None\" value=\"Rooms\" />\r\n                                <option >Great</option>\r\n                                <option>Good</option>\r\n                                <option>Bad</option>\r\n                            </Select>\r\n                    </FormControl>\r\n            <div className={\"rowOptions\"}>\r\n                <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {true} />} label=\"Parking\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {true} />} label=\"Elevator\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {true} />} label=\"Pets\"/>\r\n            </div>\r\n            <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n            <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n   </PopUp>\r\n   </div>\r\n  );\r\n}",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"169","line":31,"column":10,"nodeType":"167","messageId":"168","endLine":31,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":56,"column":16,"nodeType":"172","endLine":56,"endColumn":72},{"ruleId":"165","severity":1,"message":"173","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":17},{"ruleId":"165","severity":1,"message":"174","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":27},{"ruleId":"165","severity":1,"message":"175","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":17},{"ruleId":"165","severity":1,"message":"176","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":13},{"ruleId":"165","severity":1,"message":"177","line":15,"column":9,"nodeType":"167","messageId":"168","endLine":15,"endColumn":16},{"ruleId":"165","severity":1,"message":"178","line":15,"column":18,"nodeType":"167","messageId":"168","endLine":15,"endColumn":28},{"ruleId":"165","severity":1,"message":"179","line":16,"column":9,"nodeType":"167","messageId":"168","endLine":16,"endColumn":19},{"ruleId":"165","severity":1,"message":"180","line":16,"column":21,"nodeType":"167","messageId":"168","endLine":16,"endColumn":34},{"ruleId":"165","severity":1,"message":"181","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"182","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"183","line":65,"column":12,"nodeType":"167","messageId":"168","endLine":65,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"184","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"185","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":13},{"ruleId":"165","severity":1,"message":"186","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"187","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"165","severity":1,"message":"188","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":14},{"ruleId":"165","severity":1,"message":"189","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"190","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"161","replacedBy":"191"},{"ruleId":"163","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":24,"column":66,"nodeType":"195","endLine":24,"endColumn":87},{"ruleId":"165","severity":1,"message":"186","line":14,"column":10,"nodeType":"167","messageId":"168","endLine":14,"endColumn":16},{"ruleId":"165","severity":1,"message":"181","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"196","line":16,"column":12,"nodeType":"167","messageId":"168","endLine":16,"endColumn":25},{"ruleId":"165","severity":1,"message":"181","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"197","line":33,"column":12,"nodeType":"167","messageId":"168","endLine":33,"endColumn":20},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AssetList' is defined but never used.","'MessageOutlinedIcon' is defined but never used.","'TextField' is defined but never used.","'PopUp' is defined but never used.","'editing' is assigned a value but never used.","'setEditing' is assigned a value but never used.","'itemToEdit' is assigned a value but never used.","'setItemToEdit' is assigned a value but never used.","'useEffect' is defined but never used.","'moment' is defined but never used.","'renterDeatilsId' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Footer' is defined but never used.","'NavBar' is defined but never used.","'OwnerPage' is defined but never used.",["198"],["199"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'renterDeatils' is assigned a value but never used.","'newAsset' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
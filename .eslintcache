[{"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\index.js":"1","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Router\\router.js":"2","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\RenterSearch.js":"3","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignIn.js":"4","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PrivatePage.js":"5","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\HomePage\\App.js":"6","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Renter\\RenterPage.js":"7","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\OwnerPage.js":"8","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\AssetSearchForm.js":"9","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\NavBar.js":"10","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Footer.js":"11","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PopUp.js":"12","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Contract.js":"13","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTable.js":"14","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AddAsset.js":"15","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PersonalDeatils.js":"16","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\MessageList.js":"17","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetDeatils.js":"18","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetsList.js":"19","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTab.js":"20","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\Message.js":"21","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\UserDeatils.js":"22","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetEdit.js":"23","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetDelete.js":"24","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetCard.js":"25","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetPage.js":"26","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\UserContext.js":"27","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\addDeatils.js":"28","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignInDeatils.js":"29","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Map.js":"30","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Router\\userRouter.js":"31"},{"size":329,"mtime":1613517737427,"results":"32","hashOfConfig":"33"},{"size":1091,"mtime":1613548031496,"results":"34","hashOfConfig":"33"},{"size":527,"mtime":1613548251126,"results":"35","hashOfConfig":"33"},{"size":1749,"mtime":1613547527855,"results":"36","hashOfConfig":"33"},{"size":12772,"mtime":1613549121265,"results":"37","hashOfConfig":"33"},{"size":6588,"mtime":1613547498028,"results":"38","hashOfConfig":"33"},{"size":2331,"mtime":1613548422751,"results":"39","hashOfConfig":"33"},{"size":1687,"mtime":1613548682664,"results":"40","hashOfConfig":"33"},{"size":6127,"mtime":1613478055144,"results":"41","hashOfConfig":"33"},{"size":3993,"mtime":1613548573110,"results":"42","hashOfConfig":"33"},{"size":322,"mtime":1613386374402,"results":"43","hashOfConfig":"33"},{"size":1626,"mtime":1613492080635,"results":"44","hashOfConfig":"33"},{"size":2623,"mtime":1613386374401,"results":"45","hashOfConfig":"33"},{"size":520,"mtime":1613508490703,"results":"46","hashOfConfig":"33"},{"size":6535,"mtime":1613509343653,"results":"47","hashOfConfig":"33"},{"size":5031,"mtime":1613499123633,"results":"48","hashOfConfig":"33"},{"size":533,"mtime":1613386374420,"results":"49","hashOfConfig":"33"},{"size":1344,"mtime":1613386374410,"results":"50","hashOfConfig":"33"},{"size":739,"mtime":1613386374412,"results":"51","hashOfConfig":"33"},{"size":3751,"mtime":1613507097754,"results":"52","hashOfConfig":"33"},{"size":3189,"mtime":1613386374419,"results":"53","hashOfConfig":"33"},{"size":2188,"mtime":1613549128776,"results":"54","hashOfConfig":"33"},{"size":6430,"mtime":1613501534013,"results":"55","hashOfConfig":"33"},{"size":774,"mtime":1613386374421,"results":"56","hashOfConfig":"33"},{"size":1615,"mtime":1613386374409,"results":"57","hashOfConfig":"33"},{"size":2078,"mtime":1613511913297,"results":"58","hashOfConfig":"33"},{"size":177,"mtime":1613517952088,"results":"59","hashOfConfig":"33"},{"size":4032,"mtime":1613546000088,"results":"60","hashOfConfig":"33"},{"size":1107,"mtime":1613516382908,"results":"61","hashOfConfig":"33"},{"size":1280,"mtime":1613498849353,"results":"62","hashOfConfig":"33"},{"size":412,"mtime":1613548053665,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"15dtxtm",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\index.js",[],["137","138"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Router\\router.js",["139"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\RenterSearch.js",["140"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignIn.js",["141","142","143"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PrivatePage.js",["144","145","146","147","148","149","150","151","152"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\HomePage\\App.js",["153","154","155","156","157","158","159","160"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Renter\\RenterPage.js",["161","162","163","164","165","166"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\OwnerPage.js",["167","168","169","170"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\AssetSearchForm.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\NavBar.js",["171","172","173","174","175","176"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Footer.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PopUp.js",["177"],"import React from 'react';\r\nimport './PopUp.css';\r\nimport {ButtonBase, Modal} from \"@material-ui/core\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport default function PopUp(props) {\r\n    const sendBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>SEND</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n    const okBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>OK</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n    const showBt = () => {\r\n        if(props.showBt == true) {\r\n            return (\r\n                <div className={'divBtn'}>\r\n                    {props.sendBtn ? sendBtn() : okBtn()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const renderModal = () => {\r\n        return (\r\n            <div className={'popup'}>\r\n                <div className={'title'}>\r\n                    <h1>\r\n                        {props.title}\r\n                    </h1>\r\n                    <ButtonBase className={'closeBtn'} onClick={props.closePopup}>\r\n                        <CloseRoundedIcon/>\r\n                    </ButtonBase>\r\n                </div>\r\n                <div className={'deatils'}>\r\n                    {props.children}\r\n                </div>\r\n               {showBt()}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Modal open={props.open} onClose={props.closePopup} style={{overflow:'scroll'}}>\r\n            {renderModal()}\r\n        </Modal>\r\n    )\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Contract.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTable.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AddAsset.js",["178","179"],"import React, {useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport { Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AddAsset(props) {\r\n  let history = useHistory()\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n    const [squareFeet, setSquareFeet] = useState(\"\");\r\n    const [rooms, setRooms] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [parking, setParking] = useState(false);\r\n    const [elevator, setElevator] = useState(false);\r\n    const [petsAllowed, setPetsAllowed] = useState(false);\r\n    const [price, setPrice] = useState(\"\");\r\n    const [avilability, setAvilability] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [newAsset, setNewAsset] = useState(\"\");\r\n    const [add,setOpenAdd] = useState(false);\r\n\r\n    const assetValidation = () => {\r\n      let errors = [];\r\n      if (!moment(avilability, \"DD.MM.YYYY\").isValid())\r\n        errors.push(\"Invalid date, please insert a valid date in format of: DD.MM.YYYY.\\n\")\r\n      else if (moment().isAfter(moment(avilability, 'DD.MM.YYYY'))) \r\n        errors.push(\"Invalid date, please insert a valid date later then today. \\n\")\r\n      if (country === \"\")\r\n        errors.push(\"Country is requierd, please make sure the field is full. \\n\")\r\n      if (city === \"\")\r\n        errors.push(\"City is requierd, please make sure the field is full. \\n\")\r\n      if(price === \"\" )\r\n        errors.push(\"Price is requierd, please make sure the field is full. \\n\")\r\n      if(isNaN(price))\r\n        errors.push(\"Price must to be numbers. \\n\")\r\n      if (errors.length > 0)\r\n          alert(errors)\r\n      else\r\n          return true\r\n    }\r\n\r\n  const addAsset = () => {\r\n    if(assetValidation()) {\r\n      const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: props.idOwner,UrlPicture:imageUrl,RenterId:0};\r\n      console.log(body);\r\n      fetch(`http://localhost:3000/api/assets`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setOpenAdd(false);\r\n          setNewAsset(result);\r\n          setCountry(\"\");\r\n          setCity(\"\");\r\n          setNeighborhood(\"\");\r\n          setStreet(\"\");\r\n          setZip(\"\");\r\n          setSquareFeet(\"\");\r\n          setRooms(\"\");\r\n          setCondition(\"\");\r\n          setParking(false);\r\n          setElevator(false);\r\n          setPetsAllowed(false);\r\n          setPrice(\"\");\r\n          setAvilability(\"\");\r\n          setDescription(\"\");\r\n          setImageUrl(\"\");\r\n        })\r\n      }\r\n    }\r\n    console.log()\r\n\r\n  return (\r\n    <div >\r\n      <Button variant=\"contained\" color=\"primary\" className={\"addButAsset\"} onClick={() => setOpenAdd(true)}>Add new asset</Button>\r\n      <PopUp onSubmit={addAsset} title={\"Add asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true} showBt={true}>\r\n        <div className={\"addAssetForm\"}>\r\n          <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth required/>\r\n          <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth required/>\r\n          <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n          <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n            <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n            <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n          </div>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} required/>\r\n            <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} required/>\r\n          </div>\r\n          <FormControl fullWidth > \r\n          <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n            <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n              <option aria-label=\"None\" value=\"Rooms\" />\r\n              <option >Great</option>\r\n              <option>Good</option>\r\n              <option>Bad</option>\r\n            </Select>\r\n          </FormControl>\r\n          <div className={\"rowOptions\"}>\r\n            <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {true} />} label=\"Parking\"/>\r\n            <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {true} />} label=\"Elevator\"/>\r\n            <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {true} />} label=\"Pets\"/>\r\n          </div>\r\n          <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n          <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n      </PopUp>\r\n   </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PersonalDeatils.js",["180","181","182","183"],"import React, { useState} from 'react';\r\nimport './PrsonalDeatils.css';\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function RenterPage(props) {\r\n    const [openEdit,setOpenEdit] = useState(false);\r\n    const [jobTitle,setJob] = useState(\"\");\r\n    const [budget,setBudget] = useState(\"\");\r\n    const [favoriteCountry,setFavoriteCountry] = useState(\"\");\r\n    const [phone,setPhone] = useState(\"\");\r\n    const [country,setCountry] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n    const [owner,setOwner] = useState(\"\");\r\n\r\n    const validatePhone = () => {        \r\n        let errors = [];\r\n        if(phone != \"\") {\r\n            if(isNaN(phone)) {\r\n                errors.push(\"You have entered an invalid phone number, please insert another one \\n\")\r\n            }\r\n        }\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n    }\r\n\r\n    const validateBudget = () => {        \r\n        let errors = [];\r\n        if(budget != \"\") {\r\n            if(isNaN(budget)) {\r\n                errors.push(\"You have entered an invalid budget, please insert another one \\n\")\r\n            }\r\n        }\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n    }\r\n\r\n    const editRenter = () => {\r\n        if(validateBudget()) {\r\n            console.log(props.userId.id)\r\n            const body = { JobTitle: jobTitle,Budget:budget,FavoriteCountry: favoriteCountry};\r\n            fetch(`http://localhost:3000/api/renterDeatils/${props.renterDeatilsId}` ,{\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setOpenEdit(false);\r\n                setRenterDeatils(result)\r\n                setJob(\"\")\r\n                setBudget(\"\")\r\n                setFavoriteCountry(\"\")\r\n            });\r\n        }\r\n      }\r\n\r\n      const editOwner = () => {\r\n        if(validatePhone()) {\r\n            const body = { Country: country,Email:email,Phone:phone};\r\n            fetch(`http://localhost:3000/api/users/${props.userId}` ,{\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setOpenEdit(false);\r\n                setOwner(result)\r\n                setCountry(\"\")\r\n                setEmail(\"\")\r\n                setPhone(\"\")\r\n            });\r\n        }\r\n      }\r\n      \r\n      const isRenter = () => {\r\n          return (\r\n              <>\r\n                <div><Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>Edit</Button></div>   \r\n                <PopUp onSubmit={editRenter} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true} showBt={true}>\r\n                    <TextField label=\"JobTitle\" value={jobTitle} onChange={e => setJob(e.target.value)} fullWidth required/>\r\n                    <TextField label=\"Budget\" value={budget} onChange={e => setBudget(e.target.value)} fullWidth required/>\r\n                    <TextField label=\"Favorite country\" value={favoriteCountry} onChange={e => setFavoriteCountry(e.target.value)} fullWidth required/>\r\n                </PopUp>\r\n            </>\r\n          )\r\n      }\r\n\r\n      const isOwner = () => {\r\n        return (\r\n            <>\r\n              <div>\r\n                  <Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>EDIT</Button>\r\n                </div>   \r\n              <PopUp onSubmit={editOwner} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true} showBt={true}>\r\n                  <TextField label=\"Country\" value={country} onChange={e => setCountry(e.target.value)} fullWidth required/>\r\n                  <TextField label=\"Email\" value={email} onChange={e => setEmail(e.target.value)} fullWidth required/>\r\n                  <TextField label=\"Phone\" value={phone} onChange={e => setPhone(e.target.value)} fullWidth required/>\r\n              </PopUp>\r\n          </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\"personalDeatils\"}>\r\n            <img src={props.ImageUrl} alt=\"profile\" />\r\n            <h1>{props.FirstName} {props.LastName}</h1>\r\n            <h3>{props.JobTitle}</h3>\r\n            <div className={\"line\"}></div>\r\n            <p>Gender</p>\r\n            <span>{props.Gender}</span>\r\n            <p>Age</p>\r\n            <span>{props.Age}</span>\r\n            <p>Country</p>\r\n            <span>{props.Country}</span>\r\n            {props.renter ? isRenter() : isOwner()} \r\n        </div>\r\n\r\n\t);\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\MessageList.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetDeatils.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetsList.js",["184"],"import AssetCard from './AssetCard';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function AssetList(props) {\r\n\r\n    const assetWanted = (item) => {\r\n        if(item.RenterId==0) {\r\n            return (\r\n            <AssetCard key={item.id} id={item.id} item={item} renterId={props.renterId}> \r\n                {props.children}\r\n            </AssetCard>\r\n            )\r\n        }\r\n    }\r\n    const eachItem = (item) => {\r\n        return (\r\n            <>\r\n                {assetWanted(item)}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{marginBottom:\"2%\"}}>\r\n            { props.assetsList.map(eachItem) }\r\n        </Grid>\r\n    )\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTab.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\Message.js",["185","186"],"import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '95%',\r\n        margin: '2%',\r\n    },\r\n    \r\n});\r\n\r\nexport default function Message (props) {\r\n    const classes = useStyles();\r\n    const [openMessage,setOpenMessage] = useState(\"\");\r\n    const [answer,setAnswer] = useState(\"\");\r\n\r\n    const addAnswer = () => {\r\n        const body = {Answer:answer};\r\n        fetch(`http://localhost:3000/api/messages/${props.item.id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setOpenMessage(false);\r\n            setAnswer(result);\r\n        })\r\n    }\r\n    \r\n    const answerBtn = () => {\r\n        if(!props.renter) {\r\n            return (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenMessage(true)}>\r\n                    Send answer\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const haveAnswer = () => {\r\n        if(props.item.Answer != null){\r\n            return (\r\n                <>\r\n                    <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                        Answer:\r\n                    </Typography>\r\n                    <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                        <p>{props.item.Answer}</p>\r\n                    </Typography>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                answerBtn()\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                    {props.item.Timestamp} <br/><br/>\r\n                    Meesage:\r\n                </Typography>\r\n                <div>\r\n                <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                    <p>{props.item.Message}</p>\r\n                </Typography>\r\n                </div>\r\n                <div>\r\n                   {haveAnswer()}\r\n                </div>\r\n                <PopUp onSubmit={addAnswer} title={\"Send answer\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true}>\r\n                    <TextField id=\"outlined-multiline-static\" label=\"Answer\"  multiline rows={4} onChange={(event) => setAnswer(event.target.value)} value={answer} variant=\"outlined\" fullWidth/>\r\n                </PopUp>\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\UserDeatils.js",["187","188","189"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetEdit.js",["190","191"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport { Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nexport default function AddAsset(props) {\r\n\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [neighborhood, setNeighborhood] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [squareFeet, setSquareFeet] = useState(\"\");\r\n  const [rooms, setRooms] = useState(\"\");\r\n  const [condition, setCondition] = useState(\"\");\r\n  const [parking, setParking] = useState(false);\r\n  const [elevator, setElevator] = useState(false);\r\n  const [petsAllowed, setPetsAllowed] = useState(false);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [avilability, setAvilability] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [editedAsset, setEditAsset] = useState(\"\");\r\n  const [asset, setAsset] = useState(\"\");\r\n  const [add,setOpenAdd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/assets/${props.idAsset}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n          setAsset(result)\r\n      })\r\n  }, [asset])\r\n\r\n  const dateAndPriceValidation = () => {\r\n    let errors = [];\r\n    if(avilability !== \"\") {\r\n      if (!moment(avilability, \"DD.MM.YYYY\").isValid())\r\n        errors.push(\"Invalid date, please insert a valid date in format of: DD.MM.YYYY.\\n\")\r\n      else if (moment().isAfter(moment(avilability, 'DD.MM.YYYY'))) \r\n        errors.push(\"Invalid date, please insert a valid date later then today. \\n\")\r\n      }\r\n      if(price !== \"\" ) {\r\n        if(isNaN(price)) {\r\n          errors.push(\"Price must to be numbers. \\n\")\r\n        }\r\n      }\r\n      if (errors.length > 0)\r\n          alert(errors)\r\n      else\r\n          return true\r\n  }\r\n\r\n  const editAsset = () => {\r\n    if(dateAndPriceValidation()) {\r\n      const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: props.idOwner,UrlPicture:imageUrl};\r\n      fetch(`http://localhost:3000/api/assets/${asset.id}` ,{\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setOpenAdd(false);\r\n          setEditAsset(result);\r\n          setCountry(\"\");\r\n          setCity(\"\");\r\n          setNeighborhood(\"\");\r\n          setStreet(\"\");\r\n          setZip(\"\");\r\n          setSquareFeet(\"\");\r\n          setRooms(\"\");\r\n          setCondition(\"\");\r\n          setParking(\"\");\r\n          setElevator(\"\");\r\n          setPetsAllowed(\"\");\r\n          setPrice(\"\");\r\n          setAvilability(\"\");\r\n          setDescription(\"\");\r\n          setImageUrl(\"\");\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"addAssetContainer\"}>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenAdd(true)} className={\"but\"}>EDIT</Button>\r\n      <PopUp onSubmit={editAsset} title={\"Edit asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true} showBt={true}>\r\n        <div className={\"addAssetForm\"}>\r\n          <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth/>\r\n          <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth/>\r\n          <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n          <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n            <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n            <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n          </div>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} />\r\n            <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} />\r\n          </div>\r\n          <FormControl fullWidth > \r\n            <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n              <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n                <option aria-label=\"None\" value=\"Rooms\" />\r\n                <option >Great</option>\r\n                <option>Good</option>\r\n                <option>Bad</option>\r\n              </Select>\r\n          </FormControl>\r\n          <div className={\"rowOptions\"}>\r\n              <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {parking} />} label=\"Parking\"/>\r\n              <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {elevator} />} label=\"Elevator\"/>\r\n              <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {petsAllowed} />} label=\"Pets\"/>\r\n          </div>\r\n          <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n          <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n      </PopUp>\r\n   </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetDelete.js",["192"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function AssetDelete(props) {\r\n    const [asset, setAsset] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://localhost:3000/api/assets/${props.idAsset}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(result =>  {\r\n\t\t\tsetAsset(result)\r\n\t\t})  \r\n\t},[asset])\r\n  \r\n    const deleteAsset = () => {\r\n\t\tfetch(`http://localhost:3000/api/assets/${asset.id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(result => {})\r\n\t}\r\n  return (\r\n    <div className={\"deleteAssetContainer\"}>\r\n        <Button variant=\"contained\" color=\"primary\" className={\"but\"} onClick={deleteAsset}>DELETE</Button>\r\n   </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetCard.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetPage.js",["193"],"import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AssetDeatils from '../Asset/AssetDeatils';\r\nimport PopUp from '../All/PopUp';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AssetPage(props) {\r\n  let history = useHistory();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [asset, setAsset] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/assets?RenterId=${props.renterId}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setAsset(result)\r\n      })    \r\n  },)\r\n\r\n  const wantIt = () => {\r\n    const body={RenterId: props.renterId}\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets/${props.item.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => { \r\n          let path = '/Renter'\r\n          alert(\"The owner will contact with you soon as possible\")\r\n          history.push({\r\n            pathname: path,\r\n            user: result\r\n          })\r\n        })\r\n    };\r\n\r\n    const haveAsset = () => {\r\n      if(asset == \"\") {\r\n        return (\r\n          <Button variant=\"outlined\" color=\"primary\" style={{margin:'2%'}} onClick={() => wantIt()}>I wnat this asset</Button>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Button variant=\"outlined\" color=\"primary\" style={{margin:'2%'}} onClick={() => wantIt()} disabled>I wnat this asset</Button>\r\n        )\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"buttonsAssets\"}>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen(true)} style={{margin:'2%'}}>Show deatils</Button>\r\n        {haveAsset()}\r\n      </div>\r\n        <PopUp onSubmit={() => setOpen(false)} WantAsset={true} title={props.item.Country} open={open} closePopup={() => setOpen(false)} showBt={true}>\r\n            <AssetDeatils item={props.item} />\r\n        </PopUp>\r\n    </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\UserContext.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\addDeatils.js",["194","195","196","197","198","199"],"import React, {useEffect, useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './SignInDeatils.css';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport PopUp from '../All/PopUp';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        marginLeft: '30%',\r\n    },\r\n\r\n}}));\r\n\r\nexport default function SignInDeatils (props) { \r\n\r\n  const classes = useStyles();\r\n\r\n  const [gender,setGender] = useState(\"\")\r\n  const [phone,setPhone] = useState(\"\")\r\n  const [country,setCountry] = useState(\"\")\r\n  const [age,setAge] = useState(\"\")\r\n  const [userDeatils,setUserDeatils] = useState(\"\");\r\n  const [openEdit,setOpenEdit] = useState(true);\r\n\r\n\r\n  const register = () => {\r\n    console.log(\"here\")\r\n    if(age === '' || gender === '' || country === '' || phone === ''){\r\n        alert(\"Please fill all fields\");\r\n    } else {\r\n    Axios({\r\n        method: \"POST\",\r\n        data: {\r\n        Gender: setGender,\r\n        Phone: setPhone,\r\n        Country: setCountry,\r\n        Age: setAge,\r\n        },\r\n        withCredentials: true,\r\n        url: `http://localhost:3000/api/users${props.loctaio.userId}`,\r\n    }).then((res) => {\r\n        //if(res.data.msg === \"User Already Exists\"){\r\n            window.location = '/';\r\n        //}\r\n       // else{            \r\n         //   window.location = '/';\r\n        //}\r\n    });\r\n}\r\n};       \r\n\r\n  // const editUser = () => {\r\n  //   const body = { Phone: phone,Gender:gender,Country: country,Age:age};\r\n  //   fetch(`http://localhost:3000/api/users/${props.user.id}` ,{\r\n  //       method: 'PUT',\r\n  //       headers: { 'Content-Type': 'application/json' },\r\n  //       body: JSON.stringify(body),\r\n  //   })\r\n  //   .then(response => response.json())\r\n  //   .then(result => {\r\n  //       console.log(result)\r\n  //       setUserDeatils(result)\r\n  //       setOpenEdit(false)\r\n  //       setGender(\"\")\r\n  //       setPhone(\"\")\r\n  //       setCountry(\"\")\r\n  //       setAge(\"\")\r\n  //   });\r\n  // }\r\n\r\n\r\n    return (\r\n      <PopUp open={openEdit} onSubmit={() => register()} title={\"edit your deatils\"} showBt={true}>\r\n      <form className={classes.root} autoComplete=\"off\"> \r\n        <div className={\"colForm\"}>\r\n          <div>\r\n          <TextField \r\n              id=\"Country\" \r\n              label=\"Country\" \r\n              name=\"Country\"\r\n              value={country} \r\n              onChange={e => setCountry(e.target.value)}\r\n              fullWidth\r\n              required\r\n          />\r\n          <TextField \r\n              id=\"Phone\" \r\n              label=\"Phone\" \r\n              name=\"Phone\"\r\n              value={phone} \r\n              onChange={e => setPhone(e.target.value)}\r\n              fullWidth\r\n          />\r\n          </div>\r\n          <div className={\"rowForm\"}>\r\n            <TextField \r\n                id=\"Age\" \r\n                label=\"Age\" \r\n                name=\"Age\"\r\n                value={age} \r\n                onChange={e => setAge(e.target.value)}\r\n                required\r\n            />\r\n            <FormControl >\r\n              <InputLabel id=\"Gender\">Gender</InputLabel>\r\n              <Select \r\n                labelId=\"Gender\" \r\n                id=\"Gender\"\r\n                value={gender} \r\n                onChange={e => setGender(e.target.value)}\r\n                fullWidth\r\n                required\r\n                >\r\n                <MenuItem value={\"Male\"}>Male</MenuItem>\r\n                <MenuItem value={\"Female\"}>Female</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n        </form>\r\n        </PopUp>\r\n    );\r\n  }\r\n  \r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignInDeatils.js",["200","201","202"],"import React, {useEffect, useState,useContext} from 'react';\r\nimport './SignInDeatils.css';\r\nimport Footer from '../All/Footer';\r\nimport AddDeatils from './addDeatils';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {UserContext} from '../../UserContext';\r\n\r\nexport default function SignInDeatils (props) { \r\n  const history = useHistory();\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  const [userId] = useState(props.location.userId)\r\n  const [user,setByUserId] = useState(\"\");\r\n\r\n  console.log(userId)\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/users/${userId}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n          setByUserId(result)\r\n          console.log(result)\r\n      })    \r\n  }, [])\r\n\r\n    return (\r\n      <div className={'background'}>\r\n        <h1 className={\"headSignIn\"}>InstaRent</h1>\r\n        <div className={\"SignInDeatilsContainer\"}>\r\n          <p>Additional Information</p>\r\n          <AddDeatils\r\n            user={user}\r\n          />\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Map.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Router\\userRouter.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":1,"column":9,"nodeType":"209","messageId":"210","endLine":1,"endColumn":14},{"ruleId":"207","severity":1,"message":"211","line":5,"column":9,"nodeType":"209","messageId":"210","endLine":5,"endColumn":19},{"ruleId":"207","severity":1,"message":"212","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":24},{"ruleId":"207","severity":1,"message":"213","line":1,"column":26,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"214","line":1,"column":37,"nodeType":"209","messageId":"210","endLine":1,"endColumn":46},{"ruleId":"207","severity":1,"message":"215","line":29,"column":8,"nodeType":"209","messageId":"210","endLine":29,"endColumn":11},{"ruleId":"207","severity":1,"message":"216","line":58,"column":11,"nodeType":"209","messageId":"210","endLine":58,"endColumn":15},{"ruleId":"207","severity":1,"message":"217","line":65,"column":10,"nodeType":"209","messageId":"210","endLine":65,"endColumn":15},{"ruleId":"207","severity":1,"message":"218","line":66,"column":10,"nodeType":"209","messageId":"210","endLine":66,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":135,"column":27,"nodeType":"221","messageId":"222","endLine":135,"endColumn":29},{"ruleId":"207","severity":1,"message":"223","line":191,"column":9,"nodeType":"209","messageId":"210","endLine":191,"endColumn":20},{"ruleId":"219","severity":1,"message":"220","line":192,"column":27,"nodeType":"221","messageId":"222","endLine":192,"endColumn":29},{"ruleId":"219","severity":1,"message":"220","line":201,"column":26,"nodeType":"221","messageId":"222","endLine":201,"endColumn":28},{"ruleId":"219","severity":1,"message":"220","line":201,"column":50,"nodeType":"221","messageId":"222","endLine":201,"endColumn":52},{"ruleId":"207","severity":1,"message":"224","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":16},{"ruleId":"207","severity":1,"message":"225","line":13,"column":7,"nodeType":"209","messageId":"210","endLine":13,"endColumn":16},{"ruleId":"207","severity":1,"message":"226","line":24,"column":9,"nodeType":"209","messageId":"210","endLine":24,"endColumn":16},{"ruleId":"207","severity":1,"message":"227","line":29,"column":12,"nodeType":"209","messageId":"210","endLine":29,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":51,"column":8,"nodeType":"230","endLine":51,"endColumn":25,"suggestions":"231"},{"ruleId":"219","severity":1,"message":"220","line":71,"column":19,"nodeType":"221","messageId":"222","endLine":71,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":80,"column":18,"nodeType":"221","messageId":"222","endLine":80,"endColumn":20},{"ruleId":"207","severity":1,"message":"232","line":116,"column":13,"nodeType":"209","messageId":"210","endLine":116,"endColumn":26},{"ruleId":"207","severity":1,"message":"226","line":8,"column":7,"nodeType":"209","messageId":"210","endLine":8,"endColumn":14},{"ruleId":"207","severity":1,"message":"233","line":15,"column":10,"nodeType":"209","messageId":"210","endLine":15,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":25,"column":6,"nodeType":"230","endLine":25,"endColumn":8,"suggestions":"234"},{"ruleId":"228","severity":1,"message":"235","line":34,"column":6,"nodeType":"230","endLine":34,"endColumn":21,"suggestions":"236"},{"ruleId":"228","severity":1,"message":"235","line":42,"column":6,"nodeType":"230","endLine":42,"endColumn":8,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"235","line":50,"column":6,"nodeType":"230","endLine":50,"endColumn":8,"suggestions":"238"},{"ruleId":"207","severity":1,"message":"233","line":11,"column":12,"nodeType":"209","messageId":"210","endLine":11,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":20,"column":8,"nodeType":"230","endLine":20,"endColumn":14,"suggestions":"239"},{"ruleId":"228","severity":1,"message":"235","line":28,"column":8,"nodeType":"230","endLine":28,"endColumn":16,"suggestions":"240"},{"ruleId":"228","severity":1,"message":"235","line":36,"column":8,"nodeType":"230","endLine":36,"endColumn":18,"suggestions":"241"},{"ruleId":"207","severity":1,"message":"242","line":4,"column":9,"nodeType":"209","messageId":"210","endLine":4,"endColumn":15},{"ruleId":"207","severity":1,"message":"243","line":5,"column":9,"nodeType":"209","messageId":"210","endLine":5,"endColumn":20},{"ruleId":"207","severity":1,"message":"244","line":23,"column":12,"nodeType":"209","messageId":"210","endLine":23,"endColumn":16},{"ruleId":"207","severity":1,"message":"245","line":23,"column":18,"nodeType":"209","messageId":"210","endLine":23,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":40,"column":27,"nodeType":"221","messageId":"222","endLine":40,"endColumn":29},{"ruleId":"219","severity":1,"message":"220","line":65,"column":27,"nodeType":"221","messageId":"222","endLine":65,"endColumn":29},{"ruleId":"219","severity":1,"message":"220","line":22,"column":25,"nodeType":"221","messageId":"222","endLine":22,"endColumn":27},{"ruleId":"207","severity":1,"message":"226","line":15,"column":7,"nodeType":"209","messageId":"210","endLine":15,"endColumn":14},{"ruleId":"207","severity":1,"message":"246","line":31,"column":12,"nodeType":"209","messageId":"210","endLine":31,"endColumn":20},{"ruleId":"207","severity":1,"message":"227","line":15,"column":12,"nodeType":"209","messageId":"210","endLine":15,"endColumn":25},{"ruleId":"207","severity":1,"message":"247","line":16,"column":12,"nodeType":"209","messageId":"210","endLine":16,"endColumn":17},{"ruleId":"219","severity":1,"message":"248","line":20,"column":18,"nodeType":"221","messageId":"222","endLine":20,"endColumn":20},{"ruleId":"219","severity":1,"message":"248","line":33,"column":19,"nodeType":"221","messageId":"222","endLine":33,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":7,"column":25,"nodeType":"221","messageId":"222","endLine":7,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":54,"column":70,"nodeType":"251","endLine":54,"endColumn":91},{"ruleId":"249","severity":1,"message":"250","line":76,"column":66,"nodeType":"251","endLine":76,"endColumn":87},{"ruleId":"207","severity":1,"message":"218","line":8,"column":12,"nodeType":"209","messageId":"210","endLine":8,"endColumn":19},{"ruleId":"228","severity":1,"message":"252","line":17,"column":7,"nodeType":"230","endLine":17,"endColumn":9,"suggestions":"253"},{"ruleId":"228","severity":1,"message":"254","line":25,"column":8,"nodeType":"230","endLine":25,"endColumn":10,"suggestions":"255"},{"ruleId":"207","severity":1,"message":"256","line":30,"column":10,"nodeType":"209","messageId":"210","endLine":30,"endColumn":21},{"ruleId":"228","severity":1,"message":"257","line":40,"column":6,"nodeType":"230","endLine":40,"endColumn":13,"suggestions":"258"},{"ruleId":"228","severity":1,"message":"257","line":14,"column":4,"nodeType":"230","endLine":14,"endColumn":11,"suggestions":"259"},{"ruleId":"219","severity":1,"message":"220","line":40,"column":16,"nodeType":"221","messageId":"222","endLine":40,"endColumn":18},{"ruleId":"207","severity":1,"message":"214","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"260","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":14},{"ruleId":"207","severity":1,"message":"261","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":14},{"ruleId":"207","severity":1,"message":"262","line":32,"column":10,"nodeType":"209","messageId":"210","endLine":32,"endColumn":21},{"ruleId":"207","severity":1,"message":"263","line":32,"column":22,"nodeType":"209","messageId":"210","endLine":32,"endColumn":36},{"ruleId":"207","severity":1,"message":"264","line":33,"column":19,"nodeType":"209","messageId":"210","endLine":33,"endColumn":30},{"ruleId":"207","severity":1,"message":"226","line":9,"column":9,"nodeType":"209","messageId":"210","endLine":9,"endColumn":16},{"ruleId":"207","severity":1,"message":"265","line":10,"column":11,"nodeType":"209","messageId":"210","endLine":10,"endColumn":18},{"ruleId":"228","severity":1,"message":"266","line":24,"column":6,"nodeType":"230","endLine":24,"endColumn":8,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useCookies' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'Map' is defined but never used.","'user' is assigned a value but never used.","'asset' is assigned a value but never used.","'cookies' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'disableTabs' is assigned a value but never used.","'AddAsset' is defined but never used.","'useStyles' is assigned a value but never used.","'history' is assigned a value but never used.","'renterDeatils' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies.user.googleID'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'insertDeatils' is assigned a value but never used.","'userProps' is assigned a value but never used.",["271"],"React Hook useEffect has a missing dependency: 'cookies.user.id'. Either include it or remove the dependency array.",["272"],["273"],["274"],["275"],["276"],["277"],"'Avatar' is defined but never used.","'UserContext' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'newAsset' is assigned a value but never used.","'owner' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'props.googleIdRenter.googleID' and 'renterDeatils.googleID'. Either include them or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'props.googleIdRenter.id'. Either include it or remove the dependency array.",["279"],"'editedAsset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.idAsset'. Either include it or remove the dependency array.",["280"],["281"],"'Button' is defined but never used.","'Link' is defined but never used.","'userDeatils' is assigned a value but never used.","'setUserDeatils' is assigned a value but never used.","'setOpenEdit' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"289","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"302","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [cookies.user.googleID, cookies.user.id]",{"range":"307","text":"308"},"Update the dependencies array to be: [cookies.user.googleID]",{"range":"309","text":"310"},"Update the dependencies array to be: [cookies.user.id, renterDeatils]",{"range":"311","text":"312"},"Update the dependencies array to be: [cookies.user.id]",{"range":"313","text":"314"},{"range":"315","text":"314"},"Update the dependencies array to be: [cookies.user.googleID, user]",{"range":"316","text":"317"},"Update the dependencies array to be: [assets, cookies.user.id]",{"range":"318","text":"319"},"Update the dependencies array to be: [cookies.user.id, messages]",{"range":"320","text":"321"},"Update the dependencies array to be: [props.googleIdRenter.googleID, renterDeatils.googleID]",{"range":"322","text":"323"},"Update the dependencies array to be: [props.googleIdRenter.id]",{"range":"324","text":"325"},"Update the dependencies array to be: [asset, props.idAsset]",{"range":"326","text":"327"},{"range":"328","text":"327"},"Update the dependencies array to be: [userId]",{"range":"329","text":"330"},[1891,1908],"[cookies.user.googleID, cookies.user.id]",[900,902],"[cookies.user.googleID]",[1184,1199],"[cookies.user.id, renterDeatils]",[1438,1440],"[cookies.user.id]",[1687,1689],[703,709],"[cookies.user.googleID, user]",[966,974],"[assets, cookies.user.id]",[1236,1246],"[cookies.user.id, messages]",[605,607],"[props.googleIdRenter.googleID, renterDeatils.googleID]",[866,868],"[props.googleIdRenter.id]",[1646,1653],"[asset, props.idAsset]",[391,398],[774,776],"[userId]"]
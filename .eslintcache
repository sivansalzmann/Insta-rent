[{"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\index.js":"1","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Router\\router.js":"2","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\RenterSearch.js":"3","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignIn.js":"4","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PrivatePage.js":"5","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\HomePage\\App.js":"6","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Renter\\RenterPage.js":"7","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\OwnerPage.js":"8","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\AssetSearchForm.js":"9","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\NavBar.js":"10","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Footer.js":"11","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PopUp.js":"12","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Contract.js":"13","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTable.js":"14","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AddAsset.js":"15","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PersonalDeatils.js":"16","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\MessageList.js":"17","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetDeatils.js":"18","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetsList.js":"19","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTab.js":"20","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\Message.js":"21","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\UserDeatils.js":"22","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetEdit.js":"23","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetDelete.js":"24","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetCard.js":"25","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetPage.js":"26","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\UserContext.js":"27","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\addDeatils.js":"28","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignInDeatils.js":"29","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Map.js":"30"},{"size":329,"mtime":1613517737427,"results":"31","hashOfConfig":"32"},{"size":1016,"mtime":1613420911299,"results":"33","hashOfConfig":"32"},{"size":483,"mtime":1613513860738,"results":"34","hashOfConfig":"32"},{"size":2262,"mtime":1613518073927,"results":"35","hashOfConfig":"32"},{"size":12685,"mtime":1613516541743,"results":"36","hashOfConfig":"32"},{"size":6144,"mtime":1613515895964,"results":"37","hashOfConfig":"32"},{"size":2128,"mtime":1613513509413,"results":"38","hashOfConfig":"32"},{"size":1513,"mtime":1613501390154,"results":"39","hashOfConfig":"32"},{"size":6127,"mtime":1613478055144,"results":"40","hashOfConfig":"32"},{"size":3912,"mtime":1613516760828,"results":"41","hashOfConfig":"32"},{"size":322,"mtime":1613386374402,"results":"42","hashOfConfig":"32"},{"size":1626,"mtime":1613492080635,"results":"43","hashOfConfig":"32"},{"size":2623,"mtime":1613386374401,"results":"44","hashOfConfig":"32"},{"size":520,"mtime":1613508490703,"results":"45","hashOfConfig":"32"},{"size":6535,"mtime":1613509343653,"results":"46","hashOfConfig":"32"},{"size":5031,"mtime":1613499123633,"results":"47","hashOfConfig":"32"},{"size":533,"mtime":1613386374420,"results":"48","hashOfConfig":"32"},{"size":1344,"mtime":1613386374410,"results":"49","hashOfConfig":"32"},{"size":739,"mtime":1613386374412,"results":"50","hashOfConfig":"32"},{"size":3751,"mtime":1613507097754,"results":"51","hashOfConfig":"32"},{"size":3189,"mtime":1613386374419,"results":"52","hashOfConfig":"32"},{"size":2101,"mtime":1613507159272,"results":"53","hashOfConfig":"32"},{"size":6430,"mtime":1613501534013,"results":"54","hashOfConfig":"32"},{"size":774,"mtime":1613386374421,"results":"55","hashOfConfig":"32"},{"size":1615,"mtime":1613386374409,"results":"56","hashOfConfig":"32"},{"size":2078,"mtime":1613511913297,"results":"57","hashOfConfig":"32"},{"size":177,"mtime":1613517952088,"results":"58","hashOfConfig":"32"},{"size":3910,"mtime":1613518433441,"results":"59","hashOfConfig":"32"},{"size":1107,"mtime":1613516382908,"results":"60","hashOfConfig":"32"},{"size":1280,"mtime":1613498849353,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15dtxtm",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":7,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\index.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Router\\router.js",[],["134","135"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\RenterSearch.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignIn.js",["136","137","138"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PrivatePage.js",["139","140","141","142","143","144","145","146"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\HomePage\\App.js",["147","148","149","150","151","152","153","154"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Renter\\RenterPage.js",["155","156","157","158","159"],"import React, {useEffect, useState} from 'react';\r\nimport './RenterPage.css';\r\nimport PrivatePage from '../All/PrivatePage';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function RenterPage(props) {\r\n  let history = useHistory()\r\n\r\n  const [renterMessages, setRenterMessages] = useState(\"\");\r\n  const [user,setUser] = useState(\"\");\r\n  const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n  const [renterDeatilsId,setRenterDeatilsId] = useState(\"\");\r\n  const [wantedAsset,setWantedAsset] = useState(\"\");\r\n  const [userProps] = useState(props.location.user)\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/users/${userProps.googleID}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n          setUser(result)\r\n      })    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/renterDeatils/${userProps.id}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setRenterDeatils(result)\r\n        setRenterDeatilsId(result.id)\r\n      }) \r\n  }, [renterDeatils])\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/assets?RenterId=${userProps.id}`)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setWantedAsset(result)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/messages?RenterId=${userProps.id}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setRenterMessages(result)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n      <div className={\"renterMainPage\"}>\r\n        <PrivatePage label1={\"In progress\"} label2={\"Asset place deatils\"} label3={\"Messages to my owner\"} \r\n        FirstName={user.FirstName} LastName={user.LastName} Gender={user.Gender} Age={user.Age} Country={user.Country} ImageUrl={user.ImageUrl} idRenter={user.id}\r\n        FavoriteCountry={renterDeatils.FavoriteCountry} Budget={renterDeatils.Budget} JobTitle={renterDeatils.JobTitle} userId={user}\r\n        firstHead={\"Prsonal deatils\"} isRenter={true} user={user} messages={renterMessages} wantedAsset={wantedAsset} renterDeatilsId={renterDeatilsId} />\r\n    </div>\r\n);\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\OwnerPage.js",["160","161","162"],"import React, {useEffect, useState} from 'react';\r\nimport './OwnerPage.css';\r\nimport PrivatePage from '../All/PrivatePage';\r\n\r\nexport default function OwnerPage1(props) {\r\n\r\n    const [user,setUser] = useState(\"\");\r\n    const [assets,setAssets] = useState(\"\");\r\n    const [messages,setOwnerMessages] = useState(\"\");\r\n    const [userProps] = useState(props.location.user)\r\n\r\n    useEffect(() => {\r\n      fetch(`http://localhost:3000/api/users/${userProps.googleID}`)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setUser(result)\r\n        })\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n      fetch(`http://localhost:3000/api/assets?OwnerId=${userProps.id}`)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setAssets(result)\r\n        })     \r\n    }, [assets])\r\n\r\n    useEffect(() => {\r\n      fetch(`http://localhost:3000/api/messages?OwnerId=${userProps.id}`)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setOwnerMessages(result)\r\n        }) \r\n    }, [messages])\r\n\r\n  return (\r\n    <div className={\"ownerMainPage\"}>\r\n      <PrivatePage label1={\"General\"} label2={\"My assets\"} label3={\"Messages\"} \r\n      FirstName={user.FirstName} LastName={user.LastName} Gender={user.Gender} Age={user.Age} Country={user.Country} ImageUrl={user.ImageUrl} idOwner={user.id}\r\n      firstHead={\"Prsonal deatils\"} renter={false} user={user} assets={assets} messages={messages} userId={user}\r\n      />\r\n    </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\AssetSearch\\AssetSearchForm.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\NavBar.js",["163","164","165","166","167","168"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Footer.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PopUp.js",["169"],"import React from 'react';\r\nimport './PopUp.css';\r\nimport {ButtonBase, Modal} from \"@material-ui/core\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport default function PopUp(props) {\r\n    const sendBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>SEND</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n    const okBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>OK</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n    const showBt = () => {\r\n        if(props.showBt == true) {\r\n            return (\r\n                <div className={'divBtn'}>\r\n                    {props.sendBtn ? sendBtn() : okBtn()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const renderModal = () => {\r\n        return (\r\n            <div className={'popup'}>\r\n                <div className={'title'}>\r\n                    <h1>\r\n                        {props.title}\r\n                    </h1>\r\n                    <ButtonBase className={'closeBtn'} onClick={props.closePopup}>\r\n                        <CloseRoundedIcon/>\r\n                    </ButtonBase>\r\n                </div>\r\n                <div className={'deatils'}>\r\n                    {props.children}\r\n                </div>\r\n               {showBt()}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Modal open={props.open} onClose={props.closePopup} style={{overflow:'scroll'}}>\r\n            {renderModal()}\r\n        </Modal>\r\n    )\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Contract.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTable.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AddAsset.js",["170","171"],"import React, {useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport { Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AddAsset(props) {\r\n  let history = useHistory()\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n    const [squareFeet, setSquareFeet] = useState(\"\");\r\n    const [rooms, setRooms] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [parking, setParking] = useState(false);\r\n    const [elevator, setElevator] = useState(false);\r\n    const [petsAllowed, setPetsAllowed] = useState(false);\r\n    const [price, setPrice] = useState(\"\");\r\n    const [avilability, setAvilability] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [newAsset, setNewAsset] = useState(\"\");\r\n    const [add,setOpenAdd] = useState(false);\r\n\r\n    const assetValidation = () => {\r\n      let errors = [];\r\n      if (!moment(avilability, \"DD.MM.YYYY\").isValid())\r\n        errors.push(\"Invalid date, please insert a valid date in format of: DD.MM.YYYY.\\n\")\r\n      else if (moment().isAfter(moment(avilability, 'DD.MM.YYYY'))) \r\n        errors.push(\"Invalid date, please insert a valid date later then today. \\n\")\r\n      if (country === \"\")\r\n        errors.push(\"Country is requierd, please make sure the field is full. \\n\")\r\n      if (city === \"\")\r\n        errors.push(\"City is requierd, please make sure the field is full. \\n\")\r\n      if(price === \"\" )\r\n        errors.push(\"Price is requierd, please make sure the field is full. \\n\")\r\n      if(isNaN(price))\r\n        errors.push(\"Price must to be numbers. \\n\")\r\n      if (errors.length > 0)\r\n          alert(errors)\r\n      else\r\n          return true\r\n    }\r\n\r\n  const addAsset = () => {\r\n    if(assetValidation()) {\r\n      const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: props.idOwner,UrlPicture:imageUrl,RenterId:0};\r\n      console.log(body);\r\n      fetch(`http://localhost:3000/api/assets`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setOpenAdd(false);\r\n          setNewAsset(result);\r\n          setCountry(\"\");\r\n          setCity(\"\");\r\n          setNeighborhood(\"\");\r\n          setStreet(\"\");\r\n          setZip(\"\");\r\n          setSquareFeet(\"\");\r\n          setRooms(\"\");\r\n          setCondition(\"\");\r\n          setParking(false);\r\n          setElevator(false);\r\n          setPetsAllowed(false);\r\n          setPrice(\"\");\r\n          setAvilability(\"\");\r\n          setDescription(\"\");\r\n          setImageUrl(\"\");\r\n        })\r\n      }\r\n    }\r\n    console.log()\r\n\r\n  return (\r\n    <div >\r\n      <Button variant=\"contained\" color=\"primary\" className={\"addButAsset\"} onClick={() => setOpenAdd(true)}>Add new asset</Button>\r\n      <PopUp onSubmit={addAsset} title={\"Add asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true} showBt={true}>\r\n        <div className={\"addAssetForm\"}>\r\n          <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth required/>\r\n          <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth required/>\r\n          <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n          <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n            <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n            <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n          </div>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} required/>\r\n            <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} required/>\r\n          </div>\r\n          <FormControl fullWidth > \r\n          <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n            <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n              <option aria-label=\"None\" value=\"Rooms\" />\r\n              <option >Great</option>\r\n              <option>Good</option>\r\n              <option>Bad</option>\r\n            </Select>\r\n          </FormControl>\r\n          <div className={\"rowOptions\"}>\r\n            <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {true} />} label=\"Parking\"/>\r\n            <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {true} />} label=\"Elevator\"/>\r\n            <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {true} />} label=\"Pets\"/>\r\n          </div>\r\n          <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n          <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n      </PopUp>\r\n   </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\PersonalDeatils.js",["172","173","174","175"],"import React, { useState} from 'react';\r\nimport './PrsonalDeatils.css';\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function RenterPage(props) {\r\n    const [openEdit,setOpenEdit] = useState(false);\r\n    const [jobTitle,setJob] = useState(\"\");\r\n    const [budget,setBudget] = useState(\"\");\r\n    const [favoriteCountry,setFavoriteCountry] = useState(\"\");\r\n    const [phone,setPhone] = useState(\"\");\r\n    const [country,setCountry] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n    const [owner,setOwner] = useState(\"\");\r\n\r\n    const validatePhone = () => {        \r\n        let errors = [];\r\n        if(phone != \"\") {\r\n            if(isNaN(phone)) {\r\n                errors.push(\"You have entered an invalid phone number, please insert another one \\n\")\r\n            }\r\n        }\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n    }\r\n\r\n    const validateBudget = () => {        \r\n        let errors = [];\r\n        if(budget != \"\") {\r\n            if(isNaN(budget)) {\r\n                errors.push(\"You have entered an invalid budget, please insert another one \\n\")\r\n            }\r\n        }\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n    }\r\n\r\n    const editRenter = () => {\r\n        if(validateBudget()) {\r\n            console.log(props.userId.id)\r\n            const body = { JobTitle: jobTitle,Budget:budget,FavoriteCountry: favoriteCountry};\r\n            fetch(`http://localhost:3000/api/renterDeatils/${props.renterDeatilsId}` ,{\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setOpenEdit(false);\r\n                setRenterDeatils(result)\r\n                setJob(\"\")\r\n                setBudget(\"\")\r\n                setFavoriteCountry(\"\")\r\n            });\r\n        }\r\n      }\r\n\r\n      const editOwner = () => {\r\n        if(validatePhone()) {\r\n            const body = { Country: country,Email:email,Phone:phone};\r\n            fetch(`http://localhost:3000/api/users/${props.userId}` ,{\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setOpenEdit(false);\r\n                setOwner(result)\r\n                setCountry(\"\")\r\n                setEmail(\"\")\r\n                setPhone(\"\")\r\n            });\r\n        }\r\n      }\r\n      \r\n      const isRenter = () => {\r\n          return (\r\n              <>\r\n                <div><Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>Edit</Button></div>   \r\n                <PopUp onSubmit={editRenter} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true} showBt={true}>\r\n                    <TextField label=\"JobTitle\" value={jobTitle} onChange={e => setJob(e.target.value)} fullWidth required/>\r\n                    <TextField label=\"Budget\" value={budget} onChange={e => setBudget(e.target.value)} fullWidth required/>\r\n                    <TextField label=\"Favorite country\" value={favoriteCountry} onChange={e => setFavoriteCountry(e.target.value)} fullWidth required/>\r\n                </PopUp>\r\n            </>\r\n          )\r\n      }\r\n\r\n      const isOwner = () => {\r\n        return (\r\n            <>\r\n              <div>\r\n                  <Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>EDIT</Button>\r\n                </div>   \r\n              <PopUp onSubmit={editOwner} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true} showBt={true}>\r\n                  <TextField label=\"Country\" value={country} onChange={e => setCountry(e.target.value)} fullWidth required/>\r\n                  <TextField label=\"Email\" value={email} onChange={e => setEmail(e.target.value)} fullWidth required/>\r\n                  <TextField label=\"Phone\" value={phone} onChange={e => setPhone(e.target.value)} fullWidth required/>\r\n              </PopUp>\r\n          </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\"personalDeatils\"}>\r\n            <img src={props.ImageUrl} alt=\"profile\" />\r\n            <h1>{props.FirstName} {props.LastName}</h1>\r\n            <h3>{props.JobTitle}</h3>\r\n            <div className={\"line\"}></div>\r\n            <p>Gender</p>\r\n            <span>{props.Gender}</span>\r\n            <p>Age</p>\r\n            <span>{props.Age}</span>\r\n            <p>Country</p>\r\n            <span>{props.Country}</span>\r\n            {props.renter ? isRenter() : isOwner()} \r\n        </div>\r\n\r\n\t);\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\MessageList.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetDeatils.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetsList.js",["176"],"import AssetCard from './AssetCard';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function AssetList(props) {\r\n\r\n    const assetWanted = (item) => {\r\n        if(item.RenterId==0) {\r\n            return (\r\n            <AssetCard key={item.id} id={item.id} item={item} renterId={props.renterId}> \r\n                {props.children}\r\n            </AssetCard>\r\n            )\r\n        }\r\n    }\r\n    const eachItem = (item) => {\r\n        return (\r\n            <>\r\n                {assetWanted(item)}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{marginBottom:\"2%\"}}>\r\n            { props.assetsList.map(eachItem) }\r\n        </Grid>\r\n    )\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetTab.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Message\\Message.js",["177","178"],"import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '95%',\r\n        margin: '2%',\r\n    },\r\n    \r\n});\r\n\r\nexport default function Message (props) {\r\n    const classes = useStyles();\r\n    const [openMessage,setOpenMessage] = useState(\"\");\r\n    const [answer,setAnswer] = useState(\"\");\r\n\r\n    const addAnswer = () => {\r\n        const body = {Answer:answer};\r\n        fetch(`http://localhost:3000/api/messages/${props.item.id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setOpenMessage(false);\r\n            setAnswer(result);\r\n        })\r\n    }\r\n    \r\n    const answerBtn = () => {\r\n        if(!props.renter) {\r\n            return (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenMessage(true)}>\r\n                    Send answer\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const haveAnswer = () => {\r\n        if(props.item.Answer != null){\r\n            return (\r\n                <>\r\n                    <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                        Answer:\r\n                    </Typography>\r\n                    <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                        <p>{props.item.Answer}</p>\r\n                    </Typography>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                answerBtn()\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                    {props.item.Timestamp} <br/><br/>\r\n                    Meesage:\r\n                </Typography>\r\n                <div>\r\n                <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                    <p>{props.item.Message}</p>\r\n                </Typography>\r\n                </div>\r\n                <div>\r\n                   {haveAnswer()}\r\n                </div>\r\n                <PopUp onSubmit={addAnswer} title={\"Send answer\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true}>\r\n                    <TextField id=\"outlined-multiline-static\" label=\"Answer\"  multiline rows={4} onChange={(event) => setAnswer(event.target.value)} value={answer} variant=\"outlined\" fullWidth/>\r\n                </PopUp>\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\UserDeatils.js",["179","180"],"import React, {useEffect, useState} from 'react';\r\nimport './UserDeatils.css';\r\n\r\nexport default function UserDeatils(props) {\r\n    const [renter,setRenter] = useState(\"\")\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(renterDeatils.googleID)\r\n        fetch(`http://localhost:3000/api/users/${props.googleIdRenter.googleID}`)\r\n            .then(response => response.json())\r\n            .then(result =>  {\r\n                setRenter(result)\r\n        })\r\n    },[] )\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/api/renterDeatils/${props.googleIdRenter.id}`)\r\n            .then(response => response.json())\r\n            .then(result =>  {\r\n                setRenterDeatils(result)\r\n            })\r\n    }, [])\r\n\r\n    console.log(props.userId)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"rowImg\"}>\r\n                <div className={\"coulmn\"}>            \r\n                    <h1>{renter.FirstName},{renter.LastName}</h1>\r\n                    <span>{renterDeatils.JobTitle}</span>\r\n                    <div>\r\n                        <h4>Budget:</h4>\r\n                        <span>{renterDeatils.Budget}</span>\r\n                    </div>\r\n                </div> \r\n                <img src={renter.ImageUrl} alt=\"profile\"/>\r\n            </div>\r\n            <div className={\"firstDeatils\"}>\r\n                <div>\r\n                    <h4>Gender: </h4>\r\n                    <span>{renter.Gender}</span>\r\n                </div>\r\n                <div>\r\n                    <h4>Age:</h4>\r\n                    <span>{renter.Age}</span>\r\n                </div>\r\n                <div>\r\n                    <h4>Country: </h4>\r\n                    <span>{renter.Country}</span>\r\n                </div>\r\n            </div>\r\n            <div className={\"row\"}>\r\n                <h4>Phone: </h4>\r\n                <span>{renter.Phone}</span>\r\n            </div>\r\n            <div className={\"row\"}>\r\n                <h4>Email: </h4>\r\n                <span>{renter.Email}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetEdit.js",["181","182"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport { Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nexport default function AddAsset(props) {\r\n\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [neighborhood, setNeighborhood] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [squareFeet, setSquareFeet] = useState(\"\");\r\n  const [rooms, setRooms] = useState(\"\");\r\n  const [condition, setCondition] = useState(\"\");\r\n  const [parking, setParking] = useState(false);\r\n  const [elevator, setElevator] = useState(false);\r\n  const [petsAllowed, setPetsAllowed] = useState(false);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [avilability, setAvilability] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [editedAsset, setEditAsset] = useState(\"\");\r\n  const [asset, setAsset] = useState(\"\");\r\n  const [add,setOpenAdd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/assets/${props.idAsset}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n          setAsset(result)\r\n      })\r\n  }, [asset])\r\n\r\n  const dateAndPriceValidation = () => {\r\n    let errors = [];\r\n    if(avilability !== \"\") {\r\n      if (!moment(avilability, \"DD.MM.YYYY\").isValid())\r\n        errors.push(\"Invalid date, please insert a valid date in format of: DD.MM.YYYY.\\n\")\r\n      else if (moment().isAfter(moment(avilability, 'DD.MM.YYYY'))) \r\n        errors.push(\"Invalid date, please insert a valid date later then today. \\n\")\r\n      }\r\n      if(price !== \"\" ) {\r\n        if(isNaN(price)) {\r\n          errors.push(\"Price must to be numbers. \\n\")\r\n        }\r\n      }\r\n      if (errors.length > 0)\r\n          alert(errors)\r\n      else\r\n          return true\r\n  }\r\n\r\n  const editAsset = () => {\r\n    if(dateAndPriceValidation()) {\r\n      const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: props.idOwner,UrlPicture:imageUrl};\r\n      fetch(`http://localhost:3000/api/assets/${asset.id}` ,{\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setOpenAdd(false);\r\n          setEditAsset(result);\r\n          setCountry(\"\");\r\n          setCity(\"\");\r\n          setNeighborhood(\"\");\r\n          setStreet(\"\");\r\n          setZip(\"\");\r\n          setSquareFeet(\"\");\r\n          setRooms(\"\");\r\n          setCondition(\"\");\r\n          setParking(\"\");\r\n          setElevator(\"\");\r\n          setPetsAllowed(\"\");\r\n          setPrice(\"\");\r\n          setAvilability(\"\");\r\n          setDescription(\"\");\r\n          setImageUrl(\"\");\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"addAssetContainer\"}>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenAdd(true)} className={\"but\"}>EDIT</Button>\r\n      <PopUp onSubmit={editAsset} title={\"Edit asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true} showBt={true}>\r\n        <div className={\"addAssetForm\"}>\r\n          <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth/>\r\n          <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth/>\r\n          <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n          <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n            <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n            <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n          </div>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} />\r\n            <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} />\r\n          </div>\r\n          <FormControl fullWidth > \r\n            <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n              <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n                <option aria-label=\"None\" value=\"Rooms\" />\r\n                <option >Great</option>\r\n                <option>Good</option>\r\n                <option>Bad</option>\r\n              </Select>\r\n          </FormControl>\r\n          <div className={\"rowOptions\"}>\r\n              <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {parking} />} label=\"Parking\"/>\r\n              <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {elevator} />} label=\"Elevator\"/>\r\n              <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {petsAllowed} />} label=\"Pets\"/>\r\n          </div>\r\n          <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n          <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n      </PopUp>\r\n   </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Owner\\AssetDelete.js",["183"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function AssetDelete(props) {\r\n    const [asset, setAsset] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://localhost:3000/api/assets/${props.idAsset}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(result =>  {\r\n\t\t\tsetAsset(result)\r\n\t\t})  \r\n\t},[asset])\r\n  \r\n    const deleteAsset = () => {\r\n\t\tfetch(`http://localhost:3000/api/assets/${asset.id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(result => {})\r\n\t}\r\n  return (\r\n    <div className={\"deleteAssetContainer\"}>\r\n        <Button variant=\"contained\" color=\"primary\" className={\"but\"} onClick={deleteAsset}>DELETE</Button>\r\n   </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetCard.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Asset\\AssetPage.js",["184"],"import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AssetDeatils from '../Asset/AssetDeatils';\r\nimport PopUp from '../All/PopUp';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AssetPage(props) {\r\n  let history = useHistory();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [asset, setAsset] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/api/assets?RenterId=${props.renterId}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setAsset(result)\r\n      })    \r\n  },)\r\n\r\n  const wantIt = () => {\r\n    const body={RenterId: props.renterId}\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets/${props.item.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => { \r\n          let path = '/Renter'\r\n          alert(\"The owner will contact with you soon as possible\")\r\n          history.push({\r\n            pathname: path,\r\n            user: result\r\n          })\r\n        })\r\n    };\r\n\r\n    const haveAsset = () => {\r\n      if(asset == \"\") {\r\n        return (\r\n          <Button variant=\"outlined\" color=\"primary\" style={{margin:'2%'}} onClick={() => wantIt()}>I wnat this asset</Button>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Button variant=\"outlined\" color=\"primary\" style={{margin:'2%'}} onClick={() => wantIt()} disabled>I wnat this asset</Button>\r\n        )\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"buttonsAssets\"}>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen(true)} style={{margin:'2%'}}>Show deatils</Button>\r\n        {haveAsset()}\r\n      </div>\r\n        <PopUp onSubmit={() => setOpen(false)} WantAsset={true} title={props.item.Country} open={open} closePopup={() => setOpen(false)} showBt={true}>\r\n            <AssetDeatils item={props.item} />\r\n        </PopUp>\r\n    </div>\r\n  );\r\n}","C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\UserContext.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\addDeatils.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\Register\\SignInDeatils.js",["197","198","199"],"C:\\Study\\ThirdYear\\WebWeavingServices\\Insta-rent1\\src\\Components\\All\\Map.js",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":1,"column":16,"nodeType":"206","messageId":"207","endLine":1,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":28,"column":15,"nodeType":"210","messageId":"211","endLine":28,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":35,"column":9,"nodeType":"214","endLine":35,"endColumn":17,"suggestions":"215"},{"ruleId":"204","severity":1,"message":"216","line":29,"column":8,"nodeType":"206","messageId":"207","endLine":29,"endColumn":11},{"ruleId":"204","severity":1,"message":"217","line":57,"column":11,"nodeType":"206","messageId":"207","endLine":57,"endColumn":15},{"ruleId":"204","severity":1,"message":"218","line":64,"column":10,"nodeType":"206","messageId":"207","endLine":64,"endColumn":15},{"ruleId":"208","severity":1,"message":"219","line":132,"column":27,"nodeType":"210","messageId":"211","endLine":132,"endColumn":29},{"ruleId":"204","severity":1,"message":"220","line":188,"column":9,"nodeType":"206","messageId":"207","endLine":188,"endColumn":20},{"ruleId":"208","severity":1,"message":"219","line":189,"column":27,"nodeType":"210","messageId":"211","endLine":189,"endColumn":29},{"ruleId":"208","severity":1,"message":"219","line":198,"column":26,"nodeType":"210","messageId":"211","endLine":198,"endColumn":28},{"ruleId":"208","severity":1,"message":"219","line":198,"column":50,"nodeType":"210","messageId":"211","endLine":198,"endColumn":52},{"ruleId":"204","severity":1,"message":"221","line":9,"column":8,"nodeType":"206","messageId":"207","endLine":9,"endColumn":16},{"ruleId":"204","severity":1,"message":"222","line":12,"column":7,"nodeType":"206","messageId":"207","endLine":12,"endColumn":16},{"ruleId":"204","severity":1,"message":"223","line":23,"column":9,"nodeType":"206","messageId":"207","endLine":23,"endColumn":16},{"ruleId":"204","severity":1,"message":"224","line":28,"column":12,"nodeType":"206","messageId":"207","endLine":28,"endColumn":25},{"ruleId":"208","severity":1,"message":"219","line":52,"column":19,"nodeType":"210","messageId":"211","endLine":52,"endColumn":21},{"ruleId":"208","severity":1,"message":"219","line":61,"column":18,"nodeType":"210","messageId":"211","endLine":61,"endColumn":20},{"ruleId":"212","severity":1,"message":"225","line":90,"column":10,"nodeType":"214","endLine":90,"endColumn":12,"suggestions":"226"},{"ruleId":"204","severity":1,"message":"227","line":104,"column":13,"nodeType":"206","messageId":"207","endLine":104,"endColumn":26},{"ruleId":"204","severity":1,"message":"223","line":7,"column":7,"nodeType":"206","messageId":"207","endLine":7,"endColumn":14},{"ruleId":"212","severity":1,"message":"228","line":23,"column":6,"nodeType":"214","endLine":23,"endColumn":8,"suggestions":"229"},{"ruleId":"212","severity":1,"message":"230","line":32,"column":6,"nodeType":"214","endLine":32,"endColumn":21,"suggestions":"231"},{"ruleId":"212","severity":1,"message":"230","line":40,"column":6,"nodeType":"214","endLine":40,"endColumn":8,"suggestions":"232"},{"ruleId":"212","severity":1,"message":"230","line":48,"column":6,"nodeType":"214","endLine":48,"endColumn":8,"suggestions":"233"},{"ruleId":"212","severity":1,"message":"228","line":18,"column":8,"nodeType":"214","endLine":18,"endColumn":14,"suggestions":"234"},{"ruleId":"212","severity":1,"message":"230","line":26,"column":8,"nodeType":"214","endLine":26,"endColumn":16,"suggestions":"235"},{"ruleId":"212","severity":1,"message":"230","line":34,"column":8,"nodeType":"214","endLine":34,"endColumn":18,"suggestions":"236"},{"ruleId":"204","severity":1,"message":"237","line":4,"column":9,"nodeType":"206","messageId":"207","endLine":4,"endColumn":15},{"ruleId":"204","severity":1,"message":"238","line":5,"column":9,"nodeType":"206","messageId":"207","endLine":5,"endColumn":20},{"ruleId":"204","severity":1,"message":"239","line":22,"column":12,"nodeType":"206","messageId":"207","endLine":22,"endColumn":16},{"ruleId":"204","severity":1,"message":"240","line":22,"column":18,"nodeType":"206","messageId":"207","endLine":22,"endColumn":25},{"ruleId":"208","severity":1,"message":"219","line":39,"column":27,"nodeType":"210","messageId":"211","endLine":39,"endColumn":29},{"ruleId":"208","severity":1,"message":"219","line":64,"column":27,"nodeType":"210","messageId":"211","endLine":64,"endColumn":29},{"ruleId":"208","severity":1,"message":"219","line":22,"column":25,"nodeType":"210","messageId":"211","endLine":22,"endColumn":27},{"ruleId":"204","severity":1,"message":"223","line":15,"column":7,"nodeType":"206","messageId":"207","endLine":15,"endColumn":14},{"ruleId":"204","severity":1,"message":"241","line":31,"column":12,"nodeType":"206","messageId":"207","endLine":31,"endColumn":20},{"ruleId":"204","severity":1,"message":"224","line":15,"column":12,"nodeType":"206","messageId":"207","endLine":15,"endColumn":25},{"ruleId":"204","severity":1,"message":"242","line":16,"column":12,"nodeType":"206","messageId":"207","endLine":16,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":20,"column":18,"nodeType":"210","messageId":"211","endLine":20,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":33,"column":19,"nodeType":"210","messageId":"211","endLine":33,"endColumn":21},{"ruleId":"208","severity":1,"message":"219","line":7,"column":25,"nodeType":"210","messageId":"211","endLine":7,"endColumn":27},{"ruleId":"243","severity":1,"message":"244","line":54,"column":70,"nodeType":"245","endLine":54,"endColumn":91},{"ruleId":"243","severity":1,"message":"244","line":76,"column":66,"nodeType":"245","endLine":76,"endColumn":87},{"ruleId":"212","severity":1,"message":"246","line":15,"column":7,"nodeType":"214","endLine":15,"endColumn":9,"suggestions":"247"},{"ruleId":"212","severity":1,"message":"248","line":23,"column":8,"nodeType":"214","endLine":23,"endColumn":10,"suggestions":"249"},{"ruleId":"204","severity":1,"message":"250","line":30,"column":10,"nodeType":"206","messageId":"207","endLine":30,"endColumn":21},{"ruleId":"212","severity":1,"message":"251","line":40,"column":6,"nodeType":"214","endLine":40,"endColumn":13,"suggestions":"252"},{"ruleId":"212","severity":1,"message":"251","line":14,"column":4,"nodeType":"214","endLine":14,"endColumn":11,"suggestions":"253"},{"ruleId":"208","severity":1,"message":"219","line":40,"column":16,"nodeType":"210","messageId":"211","endLine":40,"endColumn":18},{"ruleId":"204","severity":1,"message":"254","line":1,"column":16,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"255","line":9,"column":8,"nodeType":"206","messageId":"207","endLine":9,"endColumn":14},{"ruleId":"204","severity":1,"message":"256","line":10,"column":10,"nodeType":"206","messageId":"207","endLine":10,"endColumn":14},{"ruleId":"204","severity":1,"message":"257","line":31,"column":10,"nodeType":"206","messageId":"207","endLine":31,"endColumn":21},{"ruleId":"204","severity":1,"message":"258","line":34,"column":9,"nodeType":"206","messageId":"207","endLine":34,"endColumn":17},{"ruleId":"259","severity":2,"message":"260","line":35,"column":8,"nodeType":"206","messageId":"261","endLine":35,"endColumn":21},{"ruleId":"259","severity":2,"message":"262","line":35,"column":32,"nodeType":"206","messageId":"261","endLine":35,"endColumn":48},{"ruleId":"259","severity":2,"message":"263","line":35,"column":59,"nodeType":"206","messageId":"261","endLine":35,"endColumn":75},{"ruleId":"259","severity":2,"message":"264","line":38,"column":5,"nodeType":"206","messageId":"261","endLine":38,"endColumn":10},{"ruleId":"259","severity":2,"message":"260","line":41,"column":16,"nodeType":"206","messageId":"261","endLine":41,"endColumn":29},{"ruleId":"259","severity":2,"message":"263","line":42,"column":19,"nodeType":"206","messageId":"261","endLine":42,"endColumn":35},{"ruleId":"259","severity":2,"message":"262","line":43,"column":19,"nodeType":"206","messageId":"261","endLine":43,"endColumn":35},{"ruleId":"204","severity":1,"message":"223","line":9,"column":9,"nodeType":"206","messageId":"207","endLine":9,"endColumn":16},{"ruleId":"204","severity":1,"message":"265","line":10,"column":11,"nodeType":"206","messageId":"207","endLine":10,"endColumn":18},{"ruleId":"212","severity":1,"message":"266","line":24,"column":6,"nodeType":"214","endLine":24,"endColumn":8,"suggestions":"267"},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["270"],"'Map' is defined but never used.","'user' is assigned a value but never used.","'asset' is assigned a value but never used.","Expected '===' and instead saw '=='.","'disableTabs' is assigned a value but never used.","'AddAsset' is defined but never used.","'useStyles' is assigned a value but never used.","'history' is assigned a value but never used.","'renterDeatils' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["271"],"'insertDeatils' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userProps.googleID'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'userProps.id'. Either include it or remove the dependency array.",["273"],["274"],["275"],["276"],["277"],["278"],"'Avatar' is defined but never used.","'UserContext' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'newAsset' is assigned a value but never used.","'owner' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'props.googleIdRenter.googleID' and 'renterDeatils.googleID'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'props.googleIdRenter.id'. Either include it or remove the dependency array.",["280"],"'editedAsset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.idAsset'. Either include it or remove the dependency array.",["281"],["282"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'userDeatils' is assigned a value but never used.","'register' is assigned a value but never used.","no-undef","'registerEmail' is not defined.","undef","'registerPassword' is not defined.","'registerUsername' is not defined.","'Axios' is not defined.","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["283"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"305","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [history, userId]",{"range":"310","text":"311"},"Update the dependencies array to be: [user.id]",{"range":"312","text":"313"},"Update the dependencies array to be: [userProps.googleID]",{"range":"314","text":"315"},"Update the dependencies array to be: [renterDeatils, userProps.id]",{"range":"316","text":"317"},"Update the dependencies array to be: [userProps.id]",{"range":"318","text":"319"},{"range":"320","text":"319"},"Update the dependencies array to be: [user, userProps.googleID]",{"range":"321","text":"322"},"Update the dependencies array to be: [assets, userProps.id]",{"range":"323","text":"324"},"Update the dependencies array to be: [messages, userProps.id]",{"range":"325","text":"326"},"Update the dependencies array to be: [props.googleIdRenter.googleID, renterDeatils.googleID]",{"range":"327","text":"328"},"Update the dependencies array to be: [props.googleIdRenter.id]",{"range":"329","text":"330"},"Update the dependencies array to be: [asset, props.idAsset]",{"range":"331","text":"332"},{"range":"333","text":"332"},"Update the dependencies array to be: [userId]",{"range":"334","text":"335"},[932,940],"[history, userId]",[3816,3818],"[user.id]",[786,788],"[userProps.googleID]",[1041,1056],"[renterDeatils, userProps.id]",[1266,1268],"[userProps.id]",[1486,1488],[587,593],"[user, userProps.googleID]",[821,829],"[assets, userProps.id]",[1062,1072],"[messages, userProps.id]",[518,520],"[props.googleIdRenter.googleID, renterDeatils.googleID]",[779,781],"[props.googleIdRenter.id]",[1646,1653],"[asset, props.idAsset]",[391,398],[774,776],"[userId]"]
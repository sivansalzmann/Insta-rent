[{"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\index.js":"1","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\reportWebVitals.js":"2","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Router\\router.js":"3","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\AssetSearch\\AssetSearchForm.js":"4","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\AssetSearch\\AssetPage.js":"5","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\HomePage\\App.js":"6","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\HomePage\\AssetsList.js":"7","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\HomePage\\AssetCard.js":"8","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\OwnerPage.js":"9","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\AssetAddForm.js":"10","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Renter\\RenterPage.js":"11","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\PopUp.js":"12","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Renter\\Contract.js":"13","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\OwnerAssetsList.js":"14","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\OwnerAssetCard.js":"15","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\RenterList.js":"16","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\Footer.js":"17","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\NavBar.js":"18","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\AssetSearch\\RenterSearch.js":"19","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\Message.js":"20","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\AssetDeatils.js":"21","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Register\\SignUp.js":"22","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Register\\PersonalDetails.js":"23","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Register\\SignIn.js":"24","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Message\\Message.js":"25","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Message\\MessageList.js":"26"},{"size":304,"mtime":1611915104163,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":1621,"mtime":1612215618107,"results":"30","hashOfConfig":"28"},{"size":6017,"mtime":1612533535433,"results":"31","hashOfConfig":"28"},{"size":1349,"mtime":1612466928139,"results":"32","hashOfConfig":"28"},{"size":1603,"mtime":1612533535435,"results":"33","hashOfConfig":"28"},{"size":523,"mtime":1612527211909,"results":"34","hashOfConfig":"28"},{"size":1595,"mtime":1612533535436,"results":"35","hashOfConfig":"28"},{"size":3055,"mtime":1612049948593,"results":"36","hashOfConfig":"28"},{"size":8595,"mtime":1612049717736,"results":"37","hashOfConfig":"28"},{"size":10491,"mtime":1612533535441,"results":"38","hashOfConfig":"28"},{"size":1730,"mtime":1612466117284,"results":"39","hashOfConfig":"28"},{"size":2502,"mtime":1612049790536,"results":"40","hashOfConfig":"28"},{"size":528,"mtime":1612049717737,"results":"41","hashOfConfig":"28"},{"size":1817,"mtime":1612049717737,"results":"42","hashOfConfig":"28"},{"size":2282,"mtime":1612049717740,"results":"43","hashOfConfig":"28"},{"size":330,"mtime":1612097544265,"results":"44","hashOfConfig":"28"},{"size":446,"mtime":1612097891076,"results":"45","hashOfConfig":"28"},{"size":392,"mtime":1612125265227,"results":"46","hashOfConfig":"28"},{"size":1613,"mtime":1612456960413,"results":"47","hashOfConfig":"28"},{"size":1321,"mtime":1612533535432,"results":"48","hashOfConfig":"28"},{"size":2006,"mtime":1612217062361,"results":"49","hashOfConfig":"28"},{"size":2637,"mtime":1612217029248,"results":"50","hashOfConfig":"28"},{"size":2741,"mtime":1612216608977,"results":"51","hashOfConfig":"28"},{"size":1140,"mtime":1612533535438,"results":"52","hashOfConfig":"28"},{"size":518,"mtime":1612533535439,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"257qse",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\index.js",[],["118","119"],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\reportWebVitals.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Router\\router.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\AssetSearch\\AssetSearchForm.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\AssetSearch\\AssetPage.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\HomePage\\App.js",["120","121"],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\HomePage\\AssetsList.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\HomePage\\AssetCard.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\OwnerPage.js",["122","123","124","125","126","127"],"\r\nimport React, {useEffect, useState} from 'react';\r\nimport AssetList from '../HomePage/AssetsList';\r\nimport { Link } from 'react-router-dom';\r\nimport MessageOutlinedIcon from '@material-ui/icons/MessageOutlined';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport OwnerAssetsList from './OwnerAssetsList';\r\nimport RenterList from './RenterList';\r\n\r\nconst ownerId = 9;\r\nconst OwnerPage = (props) => {\r\n\t// const [items, setItems] = useState(AssetsData.items);\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [itemToEdit, setItemToEdit] = useState(null);\r\n\t// const [ownerId,setOwnerId] = useState(\"\");\r\n\tconst [ownerAssetsList, setOwnerAssetsList] = useState([]);\r\n\tconst [renterNumb, setRenterNumb] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://instarent-1st.herokuapp.com/api/assets?OwnerId=${ownerId}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetRenterNumb(result)\r\n\t\t\t\tsetOwnerAssetsList(result)\r\n\t\t\t})\r\n\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\t// const deleteOwner = (target) => {\r\n\t// \tsetItems(prevState => ({\r\n\t// \t\titems: prevState.items.filter(item => item.id !== target)\r\n\t// \t}))\r\n\t// }\r\n\r\n\t// const editItem = (id) => {\r\n\t// \tconst item = this.state.items.filter(item => item.id === id)[0];\r\n\t// \tsetEditing(() => ({\r\n\t// \t\tediting: true,\r\n\t// \t\titemToEdit: item\r\n\t// \t}));\r\n\t// }\r\n\r\n\t// const showAsset = (id) => {\r\n\t// \tconst item = this.state.items.filter(item => item.id === id)[0];\r\n\t// \tconsole.log(item);\r\n\t// }\r\n\r\n\t// add(item) {\r\n\t// \tthis.setState(prevState => ({\r\n\t// \t\titems: [\r\n\t// \t\t\t...prevState.items, {\r\n\t// \t\t\t\tid: this.nextId(prevState.items),\r\n\t// \t\t\t\tdate: item.date,\r\n\t// \t\t\t\tlocation: item.location,\r\n\t// \t\t\t\tclient: item.client\r\n\t// \t\t\t}]\r\n\t// \t}))\r\n\t// }\r\n\r\n\t// update(updatedItem) {\r\n\t// \tthis.setState(prevState => ({\r\n\t// \t\titems: prevState.items.map(\r\n\t// \t\t\titem => item.id === this.state.itemToEdit.id ? { id: item.id, client: updatedItem.client, date: updatedItem.date, location: updatedItem.location } : item\r\n\t// \t\t),\r\n\t// \t\tediting: false,\r\n\t// \t\titemToEdit: null\r\n\t// \t}));\r\n\t// }\r\n\r\n\t// const nextId = (items = []) => {\r\n\t// \tlet max = items.reduce((prev, curr) => prev.id > curr.id ? prev.id : curr.id, 0);\r\n\t// \treturn ++max;\r\n\t// }\r\n\r\n\tconst onAddAsset = (data) => {\r\n\t\tconsole.log(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={\"renterMainPage\"}>\r\n\t\t\t\t<div className={\"navBar\"}>\r\n\t\t\t\t\t<h1><Link to={{ pathname: \"/\" }}>InstaRent</Link></h1>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><Link to={{ pathname: \"/\" }}>HOME</Link></li>\r\n\t\t\t\t\t\t<li><Link to={{ pathname: \"/\" }}>APPERTMANTS</Link></li>\r\n\t\t\t\t\t\t<li><Link to={{ pathname: \"/\" }}>PROFILE</Link></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<h1>Youe Assets</h1>\r\n\t\t\t\t\t<Link to={{ pathname: \"/AssetAddForm\", submit: onAddAsset }}>\r\n\t\t\t\t\t\t<AddCircleIcon className=\"plus\" />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<OwnerAssetsList ownerAssetsList={ownerAssetsList} />\r\n\t\t\t\t\t<h1>Your assets in proccess</h1>\r\n\t\t\t\t\t<RenterList renterNumb={renterNumb} />\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n\r\n\r\n\r\n}\r\n\r\nexport default OwnerPage;\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\AssetAddForm.js",["128","129"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AssetAddForm = (props) => {\r\n    \r\n    \r\n    \r\n    // const addNewAsset = () => {\r\n    //     const body = {\r\n    //         \tOwnerId: OwnerId,\r\n    //         asset: asset\r\n    //     }\r\n    //     fetch(`https://instarent-1st.herokuapp.com/api/assets`),\r\n    //         {headers: {'Content-Type': 'application/json'}, method: 'POST', body: JSON.stringify(body)})\r\n    //         .then(response => response.json())\r\n    //         .then(result => {\r\n    //             setAsset(result)\r\n    //             setInputMessage('')\r\n    //         })\r\n    // }\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n    const [squareFeet, setSquareFeet] = useState(\"\");\r\n    const [rooms, setRooms] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [parking, setParking] = useState(\"\");\r\n    const [elevator, setElevator] = useState(\"\");\r\n    const [petsAllowed, setPetsAllowed] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [avilability, setAvilability] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n//     // useEffect(() => {\r\n//     //     if (props.initialData) {\r\n//     //         setCountry(props.initialData.country);\r\n//     //         setCity(props.initialData.city);\r\n//     //         setNeighborhood(props.initialData.neighborhood);\r\n//     //         setStreet(props.initialData.street);\r\n//     //         setZip(props.initialData.zip);\r\n//     //         setSquareFeet(props.initialData.squareFeet);\r\n//     //         setRooms(props.initialData.rooms);\r\n//     //         setCondition(props.initialData.condition);\r\n//     //         setParking(props.initialData.condition);\r\n//     //         setElevator(props.initialData.elevator);\r\n//     //         setPetsAllowed(props.initialData.petsAllowed);\r\n//     //         setPrice(props.initialData.price);\r\n//     //         setAvilability(props.initialData.avilability);\r\n//     //         setDescription(props.initialData.description);\r\n\r\n//     //     }\r\n//     // }, [props.initialData]);\r\n\r\n    const formDataIsValid = () => {\r\n\r\n        let errors = [];\r\n        if (country === \"\" || city === \"\" || neighborhood === \"\" || street === \"\" || zip === \"\" || rooms === \"\" || squareFeet === \"\" || price === \"\" || description === \"\")\r\n            errors.push(\"All fields are requierd, please make sure all fields are filled.\")\r\n\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n\r\n\r\n    }\r\n\r\n    const onSubmit = () => {\r\n\r\n        if (formDataIsValid()) {\r\n            props.location.submit({ country, city, neighborhood, street, zip, squareFeet, rooms, condition, parking, elevator, petsAllowed, price, avilability, description });\r\n            setCountry(\"\");\r\n            setCity(\"\");\r\n            setNeighborhood(\"\");\r\n            setStreet(\"\");\r\n            setZip(\"\");\r\n            setSquareFeet(\"\");\r\n            setRooms(\"\");\r\n            setCondition(\"\");\r\n            setParking(\"\");\r\n            setElevator(\"\");\r\n            setPetsAllowed(\"\");\r\n            setPrice(\"\");\r\n            setAvilability(\"\");\r\n            setDescription(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'assetForm'}>\r\n            <h1>Add new asset</h1>\r\n            <form noValidate autoComplete=\"off\">\r\n                <div className=\"formLeft\">\r\n                    <div className=\"country wide\">\r\n                        <label>Country</label>\r\n                        <input type=\"text\" name=\"country\" onChange={(event) => setCountry(event.target.value)} value={country} placeholder=\"Country\" />\r\n                    </div>\r\n                    <div className=\"city wide\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" name=\"city\" onChange={(event) => setCity(event.target.value)} value={city} placeholder=\"City\" />\r\n                    </div>\r\n                    <div className=\"neighborhood wide\">\r\n                        <label>Neighborhood</label>\r\n                        <input type=\"text\" name=\"neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} placeholder=\"Neighborhood\" />\r\n                    </div>\r\n                    <div className=\"street wide\">\r\n                        <label>Street</label>\r\n                        <input type=\"text\" name=\"street\" onChange={(event) => setStreet(event.target.value)} value={street} placeholder=\"Street\" />\r\n                    </div>\r\n                    <div className=\"zsr wide\">\r\n                        <div className=\"zip\">\r\n                            <label>Zip</label>\r\n                            <input type=\"number\" name=\"zip\" onChange={(event) => setZip(event.target.value)} value={zip} placeholder=\"Zip\" />\r\n                        </div>\r\n                        <div className=\"squareFeet\">\r\n                            <label>Square Feet</label>\r\n                            <input type=\"number\" name=\"squareFeet\" onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} placeholder=\"SquareFeet\" />\r\n                        </div>\r\n                        <div className=\"rooms\">\r\n                            <label>Rooms</label>\r\n                            <input type=\"select\" name=\"rooms\" onChange={(event) => setRooms(event.target.value)} value={rooms} placeholder=\"Number of rooms\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formRight\">\r\n                    <div className=\"condition\">\r\n                        <label>Condition</label>\r\n                        <select type=\"select\" name=\"condition\" onChange={(event) => setCondition(event.target.value)} value={condition} placeholder=\"Condition\" >\r\n                            <option value=\"Great\">Great</option>\r\n                            <option value=\"Good\">Good</option>\r\n                            <option value=\"Bad\">Bad</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"extras\">\r\n                        <label>Extras</label>\r\n                        <div className=\"parking\">\r\n                            <input type=\"checkbox\" name=\"parking\" onChange={(event) => setParking(event.target.value)} value={true} />\r\n                            <label className=\"check\">Parking</label>\r\n                        </div>\r\n                        <div className=\"elevator\">\r\n                            <input type=\"checkbox\" name=\"elevator\" onChange={(event) => setElevator(event.target.value)} value={true} />\r\n                            <label className=\"check\">Elevator</label>\r\n                        </div>\r\n                        <div className=\"petsAllowed\">\r\n                            <input type=\"checkbox\" name=\"petsAllowed\" onChange={(event) => setPetsAllowed(event.target.value)} value={true} />\r\n                            <label className=\"check\" >Pets Allowed</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <label>Price</label>\r\n                        <input type=\"number\" name=\"price\" onChange={(event) => setPrice(event.target.value)} value={price} placeholder=\"price\" />\r\n                    </div>\r\n                    <div className=\"avilability\">\r\n                        <label>Avilability</label>\r\n                        <input type=\"date\" name=\"avilability\" onChange={(event) => setAvilability(event.target.value)} value={avilability} />\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <label>Description</label>\r\n                        <input type=\"textarea\" name=\"description\" onChange={(event) => setDescription(event.target.value)} value={description} rows=\"4\" cols=\"50\" placeholder=\"Enter Description here\" />\r\n                    </div>\r\n                </div>\r\n                <Link to={{ pathname: \"/OwnerPage\" }}>\r\n                    <Button variant=\"contained\" className={'button'} onClick={onSubmit}>\r\n                        Add\r\n                </Button>\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default AssetAddForm;","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Renter\\RenterPage.js",["130"],"import React, {useEffect, useState} from 'react';\r\nimport './RenterPage.css';\r\nimport profileImg from './Media/profile.png'\r\nimport { Button } from '@material-ui/core';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Contract from './Contract';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport Message from '../All/Message';\r\nimport AssetDeatils from '../All/AssetDeatils';\r\n\r\nconst userId = '3';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div role=\"tabpanel\" hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other} >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n          'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\nexport default function RenterPage(props) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [openEdit,setOpenEdit] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n    const [renterMessages, setRenterMessages] = useState(\"\");\r\n    const [user,setUser] = useState(\"\");\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n    const [renterDeatilsId,setRenterDeatilsId] = useState(\"\");\r\n    const [value, setValue] = useState(0);\r\n    const [jobTitle,setJob] = useState(\"\");\r\n    const [budget,setBudget] = useState(\"\");\r\n    const [message,setMessage] = useState(\"\");\r\n    const [timestamp,setTimestamp] = useState(\"\");\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    const handleChangeIndex = (index) => {\r\n      setValue(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n      // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n        fetch(`http://localhost:3000/api/users/${userId}`)\r\n          .then(response => response.json())\r\n          .then(result =>  {\r\n             setUser(result)\r\n          })\r\n          \r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n      fetch(`http://localhost:3000/api/renterDeatils/${userId}`)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n          setRenterDeatils(result)\r\n          setRenterDeatilsId(result.id)\r\n        })\r\n        \r\n    }, [renterDeatils])\r\n\r\n    useEffect(() => {\r\n      // fetch(`https://instarent-1st.herokuapp.com/api/users/${userId}`)\r\n        fetch(`http://localhost:3000/api/messages?RenterId=${userId}`)\r\n          .then(response => response.json())\r\n          .then(result =>  {\r\n            setRenterMessages(result)\r\n            // console.log(result)\r\n          })\r\n          \r\n      }, [renterMessages])\r\n\r\n    const editUser = () => {\r\n        const body = { JobTitle: jobTitle,Budget:budget};\r\n        console.log(body);\r\n        // fetch(`https://instarent-1st.herokuapp.com/api/users/${user.id}`, {\r\n        fetch(`http://localhost:3000/api/renterDeatils/${renterDeatils.id}` ,{\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n          .then(response => response.json())\r\n          .then(result => {\r\n              setOpenEdit(false);\r\n              setRenterDeatils(result)\r\n              setJob(\"\")\r\n              setBudget(\"\")\r\n          });\r\n      }\r\n\r\n    const addMessage = () => {\r\n      let today = new Date();\r\n      setTimestamp(today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate());\r\n      const body = { Message: message , RenterId:userId, OwnerId:0,Timestamp:timestamp};\r\n      console.log(body)\r\n      // fetch(`https://instarent-1st.herokuapp.com/api/messages`, {\r\n        fetch(`http://localhost:3000/api/messages` ,{\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setOpenMessage(false)\r\n            setMessage(result)\r\n            setMessage(\"\")\r\n        });\r\n    }\r\n\r\n    return (\r\n\t\t<div className={\"renterMainPage\"}>\r\n\t\t\t<NavBar/>\r\n\t\t\t<div className={\"renterPageContainer\"}>\r\n        <div className={\"personalDeatils\"}>\r\n            <img src={profileImg} alt=\"profile\" />\r\n            <h1>{user.FirstName} {user.LastName}</h1>\r\n            <h3>{renterDeatils.JobTitle}</h3>\r\n            <div className={\"line\"}></div>\r\n            <p>Gender</p>\r\n            <span>{user.Gender}</span>\r\n            <p>Age</p>\r\n            <span>{user.Age}</span>\r\n            <p>Country</p>\r\n            <span>{user.Country}</span>\r\n            <div><Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>Edit</Button></div>        \r\n        </div>\r\n      <div className={\"containerRenter\"}>\r\n          <div className={\"currentContainer\"}>\r\n              <div className={\"curStatus\"}>\r\n                  <h1>Current status</h1>\r\n                  <p>Looking for rent appetmant in {renterDeatils.FavoriteCountry} </p>\r\n              </div>\r\n              <div className={\"curBud\"}>\r\n                  <h1>Cuurent budget</h1>\r\n                  <p>{renterDeatils.Budget} $</p>\r\n              </div>\r\n          </div>\r\n          <div className={\"progress\"}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\r\n                <Tab label=\"In progress\" {...a11yProps(0)} />\r\n                <Tab label=\"Asset place deatils\" {...a11yProps(1)}  />\r\n                <Tab label=\"Chat with my owner\" {...a11yProps(2)}  />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={value}onChangeIndex={handleChangeIndex}>\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <h1 style={{fontFamily:'Lato'}}>Rent asset progress</h1>\r\n            <div>\r\n                <Stepper active orientation=\"vertical\">\r\n                    <Step >\r\n                        <StepLabel style={{fontFamily:'Lato'}}>Request recived</StepLabel>\r\n                        <StepContent>\r\n                        <Typography style={{fontFamily:'Lato'}}>The owner of your wantes asset saw your reques and will be in touch soon</Typography>\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setOpen(true)}>Asset deatils</Button>\r\n                        </StepContent>\r\n                    </Step>\r\n                    <Step active>\r\n                        <StepLabel style={{fontFamily:'Lato'}}>Asset rentering in proccess</StepLabel>\r\n                        <StepContent>\r\n                        <Typography style={{fontFamily:'Lato'}}>You can talk anytime you want with the owner in the chat and review on tour contract now</Typography>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setOpenMessage(true)}>message to owner</Button>\r\n                            <PopUp onSubmit={addMessage} title={\"Send Message\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true}>\r\n                                <TextField label=\"Message\" value={message} onChange={e => setMessage(e.target.value)} fullWidth required/>\r\n                            </PopUp>\r\n                            <Contract/>\r\n                        </StepContent>\r\n                    </Step>\r\n                    <Step >\r\n                        <StepLabel style={{fontFamily:'Lato'}}>Enjoy in your new journey!</StepLabel>\r\n                        <StepContent>\r\n                        <Typography style={{fontFamily:'Lato'}}></Typography>\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\">Chat</Button>\r\n                        <Contract/>\r\n                        </StepContent>\r\n                    </Step>\r\n                </Stepper>\r\n              </div> \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}> \r\n              From google api\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              {/* {console.log(renterMessages)}\r\n              {\r\n                renterMessages.forEach((item) => {\r\n                  console.log(item)\r\n                })\r\n              } */}\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div> \r\n      </div>\r\n    </div>\r\n    <PopUp onSubmit={editUser} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true}>\r\n        <TextField label=\"JobTitle\" value={jobTitle} onChange={e => setJob(e.target.value)} fullWidth required/>\r\n        <TextField label=\"Budget\" value={budget} onChange={e => setBudget(e.target.value)} fullWidth required/>\r\n    </PopUp>\r\n    {/* <PopUp onSubmit={() => setOpen(false)} wantAssetBtn={false} title={props.location.wantedAsset[0].Country} open={open} closePopup={() => setOpen(false)} sendBtn={false}>\r\n      <AssetDeatils item={props.location.wantedAsset[0]} />\r\n    </PopUp> */}\r\n    <Footer/>\r\n\t</div>\r\n\t);\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\PopUp.js",["131"],"import React from 'react';\r\nimport './PopUp.css';\r\nimport {ButtonBase, Modal} from \"@material-ui/core\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\n\r\nconst PopUp = (props) => {\r\n\r\n    const sendBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>SEND</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n\r\n\r\n    const okBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>OK</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n\r\n    const contactOwnerBtn = () => {\r\n        return (\r\n            <ButtonBase className={'okBtn'} centerRipple={true} onClick={props.onSubmit}>\r\n                <p>CONTECT OWNER</p>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n\r\n    const renderModal = () => {\r\n        return (\r\n            <div className={'popup'}>\r\n                <div className={'title'}>\r\n                    <h1>\r\n                        {props.title}\r\n                    </h1>\r\n                    <ButtonBase className={'closeBtn'} onClick={props.closePopup}>\r\n                        <CloseRoundedIcon/>\r\n                    </ButtonBase>\r\n                </div>\r\n                <div className={'deatils'}>\r\n                    {props.children}\r\n                </div>\r\n                <div className={'divBtn'}>\r\n                    {props.sendBtn ? sendBtn() : okBtn()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Modal open={props.open} onClose={props.closePopup} style={{overflow:'scroll'}}>\r\n            {renderModal()}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PopUp;","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Renter\\Contract.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\OwnerAssetsList.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\OwnerAssetCard.js",["132"],"import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OwnerPage from './OwnerPage';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 300,\r\n        margin: '2%',\r\n    },\r\n\r\n});\r\n\r\n\r\nexport default function OwnerAssetCard(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia component=\"img\" height=\"140\" image=\"https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fspecials-images.forbesimg.com%2Fimageserve%2F1026205392%2F960x0.jpg%3Ffit%3Dscale\" title=\"Referrals\" />\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{ fontFamily: 'Lato' }}>\r\n                    {props.item.Description}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" component=\"subtitle2\" style={{ fontFamily: 'Lato', fontWeight: 'bold' }}>\r\n                    {props.item.Country}\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h6\" style={{ fontFamily: 'Lato', fontWeight: 'bold' }}>\r\n                    {props.item.Price} / per month\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h5\" style={{ fontFamily: 'Lato', fontWeight: 'bold' }}>\r\n                    Avilable from {props.item.Avilability}\r\n                </Typography>\r\n                <EditOutlinedIcon />\r\n                <DeleteOutlineIcon />\r\n            </CardContent>\r\n        </Card>\r\n\r\n\r\n    );\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Owner\\RenterList.js",["133"],"import react, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData({props.forRentList.Phone}),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\nexport default function RenterList() {\r\n  const classes = useStyles();\r\n  const renterNumb =9\r\n  const [renterList, setRentList] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/users?id=${renterNumb}`)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setRentList(result)\r\n        })\r\n  \r\n  }, [])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Asset number</TableCell>\r\n            <TableCell align=\"right\">Renter Name</TableCell>\r\n            <TableCell align=\"right\">Phone</TableCell>\r\n           \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {renterList.map((renterList) => (\r\n            <TableRow key={renterList.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {renterList.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{renterList.id}</TableCell>\r\n              <TableCell align=\"right\">{renterList.FirstName}</TableCell>\r\n              <TableCell align=\"right\">{renterList.Phone}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\Footer.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\NavBar.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\AssetSearch\\RenterSearch.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\Message.js",["134"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst Message = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleClickOpen}>\r\n        message to owner\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Message</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter your message\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"meesage\"\r\n            rows={4}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" onClick={props.onSubmit}>\r\n            Send\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Message;","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\All\\AssetDeatils.js",[],"C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Register\\SignUp.js",["135","136"],"import react ,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport './SignIn.css';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport PersonalDetails from './PersonalDetails';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        display: 'flex',\r\n        marginLeft: '30%',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n  },\r\n}}));\r\n\r\nexport default function SignUp (props) { \r\n\r\n  const classes = useStyles();\r\n\r\n  const [user,setUser] = useState(\"\");\r\n\r\n  const [inputs, setInputs] = useState({\r\n    FirstName: \"\",\r\n    LastName: \"\",\r\n    Gender: \"\",\r\n    Phone: \"\",\r\n    Email: \"\",\r\n})\r\n\r\n\r\nconst handleChange = input => event => {\r\n  event.preventDefault();\r\n    setInputs({ ...inputs, [input]: event.target.value });\r\n}\r\n\r\nconst onSubmit = event => {\r\n  event.preventDefault();\r\n\r\n  console.log('here');\r\n  let pack =  inputs;\r\n  if(setUser !== \"\" )\r\n      pack = {...pack, setUser : setUser};\r\n  console.log(pack);\r\n}\r\n\r\n\r\n    return (\r\n      <div className={'background'}>\r\n        <NavBar />\r\n        <div className={\"signInContainer\"}>\r\n          <h1>SIGN UP</h1>\r\n          <form className={classes.root} onSubmit={onSubmit} autoComplete=\"off\">\r\n          <PersonalDetails\r\n            handleChange={handleChange}\r\n            values={inputs}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSubmit}\r\n            style={{fontSize:'15px',fontWeight:'bold',marginLeft: '15%',marginTop:'5%',width:'60%'}}\r\n          >\r\n            Sign Up\r\n        </Button>\r\n        </form>\r\n      </div>\r\n      <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Register\\PersonalDetails.js",["137","138","139","140","141","142","143"],"import react ,{ useState } from 'react';\r\nimport Axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './SignIn.css';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        display: 'flex',\r\n        marginLeft: '30%',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n  },\r\n}}));\r\n\r\nexport default function SignUp (props) { \r\n\r\n  const classes = useStyles();\r\n\r\n  const { FirstName, LastName, Gender, Email, Phone } = props.values;\r\n\r\n    return (\r\n        <>\r\n          <TextField \r\n              id=\"FirstName\" \r\n              label=\"First name\" \r\n              name=\"First name\"\r\n              defaultValue={FirstName}\r\n              onChange={props.handleChange('FirstName')}\r\n              fullWidth\r\n          />\r\n          <TextField \r\n              id=\"LastName\" \r\n              label=\"Last name\" \r\n              name=\"Last name\"\r\n              defaultValue={LastName}\r\n              onChange={props.handleChange('LastName')}\r\n              fullWidth\r\n          />\r\n          <TextField \r\n              id=\"Email\" \r\n              label=\"Email\" \r\n              name=\"Email\"\r\n              defaultValue={Email}\r\n              onChange={props.handleChange('Email')}\r\n              fullWidth\r\n          />\r\n          <TextField \r\n              id=\"Phone\" \r\n              label=\"Phone\" \r\n              name=\"Phone\"\r\n              defaultValue={Phone}\r\n              onChange={props.handleChange('Phone')}\r\n              fullWidth\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"Gender\">Gender</InputLabel>\r\n            <Select \r\n              labelId=\"Gender\" \r\n              id=\"Gender\"\r\n              defaultValue={Gender}\r\n              onChange={props.handleChange('Gender')}\r\n              fullWidth\r\n              >\r\n              <MenuItem value={\"Male\"}>Male</MenuItem>\r\n              <MenuItem value={\"Female\"}>Female</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </>\r\n    );\r\n  }\r\n  \r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Register\\SignIn.js",["144","145"],"import react ,{ useState } from 'react';\r\nimport Axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './SignIn.css';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        display: 'flex',\r\n        marginLeft: '25%',\r\n        marginTop: '6%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst responseGoogle = () => {\r\n  console.log('Google');\r\n}\r\n\r\nexport default function Login (props) { \r\n\r\n  const classes = useStyles();\r\n\r\n  const [loginUsername, setLoginUsername] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n  const login = () => {\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        username: loginUsername,\r\n        password: loginPassword,\r\n      },\r\n      withCredentials: true,\r\n      url: \"http://localhost:3000/api/owners/login\",\r\n    }).then((res) => console.log(res));\r\n  };\r\n\r\n    return (\r\n      <div className={'background'}>\r\n        <NavBar />\r\n        <div className={\"signInContainer\"}>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField required id=\"standard-required\" label=\"EMAIL\" defaultValue=\"\" onChange={(e) => setLoginUsername(e.target.value)}/>\r\n            <TextField required id=\"standard-password-input\" label=\"PASSWORD\" type=\"password\" autoComplete=\"current-password\" onChange={(e) => setLoginPassword(e.target.value)}/>  \r\n            <p><a href=\"#\" style={{marginLeft: '39%',fontSize:'12px'}}>FORGOT YOUR PASSWORD?</a></p>\r\n            <Button variant=\"outlined\" color=\"primary\" style={{fontSize:'15px',fontWeight:'bold',marginLeft: '20%',marginTop:'5%',width:'60%'}} onClick={login}>SIGN IN</Button>\r\n          </form>\r\n          <div className={\"loginWithSocial\"}>\r\n            <div></div>\r\n            <p>SIGN IN WITH</p>\r\n            <div></div>\r\n          </div>\r\n          <div className={\"signUpNow\"}>\r\n            <div className={\"googleLogIn\"}> \r\n                <GoogleLogin\r\n                className={classes.google}\r\n                clientId=\"455770929949-rknvnltjkidooak44tu8jbt49372itkn.apps.googleusercontent.com\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                />\r\n            </div>\r\n            <Link to={{ pathname: \"/SignUp\"}}><p>Don't have an account yet? Sign up!</p></Link>\r\n          </div>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Message\\Message.js",["146"],"import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '95%',\r\n        margin: '2%',\r\n    },\r\n    \r\n});\r\n\r\nexport default function AssetCard (props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                    {props.item.Timestamp}\r\n                </Typography>\r\n                <div>\r\n                <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                    <p>{props.item.Message}</p>\r\n                </Typography>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\">See answer</Button>\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}\r\n\r\n","C:\\Study\\ThirdYear\\WebWeavingServices\\insta-rent\\src\\Components\\Message\\MessageList.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"155","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":35},{"ruleId":"151","severity":1,"message":"156","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":17},{"ruleId":"151","severity":1,"message":"157","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":27},{"ruleId":"151","severity":1,"message":"158","line":13,"column":9,"nodeType":"153","messageId":"154","endLine":13,"endColumn":16},{"ruleId":"151","severity":1,"message":"159","line":13,"column":18,"nodeType":"153","messageId":"154","endLine":13,"endColumn":28},{"ruleId":"151","severity":1,"message":"160","line":14,"column":9,"nodeType":"153","messageId":"154","endLine":14,"endColumn":19},{"ruleId":"151","severity":1,"message":"161","line":14,"column":21,"nodeType":"153","messageId":"154","endLine":14,"endColumn":34},{"ruleId":"151","severity":1,"message":"152","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"162","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"163","line":65,"column":12,"nodeType":"153","messageId":"154","endLine":65,"endColumn":27},{"ruleId":"151","severity":1,"message":"164","line":25,"column":11,"nodeType":"153","messageId":"154","endLine":25,"endColumn":26},{"ruleId":"151","severity":1,"message":"165","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":17},{"ruleId":"151","severity":1,"message":"166","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":45,"column":57,"nodeType":"169","endLine":45,"endColumn":81},{"ruleId":"151","severity":1,"message":"166","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"170","line":31,"column":10,"nodeType":"153","messageId":"154","endLine":31,"endColumn":14},{"ruleId":"151","severity":1,"message":"166","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"155","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"171","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":13},{"ruleId":"151","severity":1,"message":"172","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":14},{"ruleId":"151","severity":1,"message":"173","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"174","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":14},{"ruleId":"151","severity":1,"message":"175","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":14},{"ruleId":"151","severity":1,"message":"166","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":54,"column":16,"nodeType":"178","endLine":54,"endColumn":72},{"ruleId":"167","severity":1,"message":"168","line":24,"column":66,"nodeType":"169","endLine":24,"endColumn":87},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AssetList' is defined but never used.","'MessageOutlinedIcon' is defined but never used.","'editing' is assigned a value but never used.","'setEditing' is assigned a value but never used.","'itemToEdit' is assigned a value but never used.","'setItemToEdit' is assigned a value but never used.","'moment' is defined but never used.","'renterDeatilsId' is assigned a value but never used.","'contactOwnerBtn' is assigned a value but never used.","'OwnerPage' is defined but never used.","'react' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'user' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Footer' is defined but never used.","'NavBar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\index.js":"1","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Router\\router.js":"2","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Router\\userRouter.js":"3","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\RenterPage.js":"4","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerPage.js":"5","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignIn.js":"6","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignInDeatils.js":"7","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\RenterSearch.js":"8","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PrivatePage.js":"9","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\App.js":"10","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Footer.js":"11","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Contract.js":"12","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetTable.js":"13","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AddAsset.js":"14","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Map.js":"15","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\addDeatils.js":"16","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\NavBar.js":"17","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PopUp.js":"18","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\MessageList.js":"19","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PersonalDeatils.js":"20","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\AssetSearchForm.js":"21","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetDeatils.js":"22","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetTab.js":"23","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\Message.js":"24","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetsList.js":"25","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\UserDeatils.js":"26","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetDelete.js":"27","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetEdit.js":"28","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetCard.js":"29","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetPage.js":"30"},{"size":411,"mtime":1613984169271,"results":"31","hashOfConfig":"32"},{"size":1081,"mtime":1613984169253,"results":"33","hashOfConfig":"32"},{"size":412,"mtime":1613549670798,"results":"34","hashOfConfig":"32"},{"size":2110,"mtime":1614009947500,"results":"35","hashOfConfig":"32"},{"size":1571,"mtime":1614009919490,"results":"36","hashOfConfig":"32"},{"size":2472,"mtime":1614011248028,"results":"37","hashOfConfig":"32"},{"size":4034,"mtime":1614009935969,"results":"38","hashOfConfig":"32"},{"size":853,"mtime":1614009959975,"results":"39","hashOfConfig":"32"},{"size":13191,"mtime":1614009734812,"results":"40","hashOfConfig":"32"},{"size":7379,"mtime":1614009868160,"results":"41","hashOfConfig":"32"},{"size":322,"mtime":1613227674469,"results":"42","hashOfConfig":"32"},{"size":2623,"mtime":1612634989634,"results":"43","hashOfConfig":"32"},{"size":520,"mtime":1613543859775,"results":"44","hashOfConfig":"32"},{"size":6504,"mtime":1614009887928,"results":"45","hashOfConfig":"32"},{"size":1280,"mtime":1613984163194,"results":"46","hashOfConfig":"32"},{"size":4521,"mtime":1613984169204,"results":"47","hashOfConfig":"32"},{"size":2012,"mtime":1614009756277,"results":"48","hashOfConfig":"32"},{"size":1627,"mtime":1613984169074,"results":"49","hashOfConfig":"32"},{"size":533,"mtime":1613227674748,"results":"50","hashOfConfig":"32"},{"size":4353,"mtime":1614009776161,"results":"51","hashOfConfig":"32"},{"size":6118,"mtime":1614009850017,"results":"52","hashOfConfig":"32"},{"size":1342,"mtime":1614008695716,"results":"53","hashOfConfig":"32"},{"size":3712,"mtime":1614008695800,"results":"54","hashOfConfig":"32"},{"size":3217,"mtime":1614009876553,"results":"55","hashOfConfig":"32"},{"size":742,"mtime":1613984169114,"results":"56","hashOfConfig":"32"},{"size":2162,"mtime":1614009810953,"results":"57","hashOfConfig":"32"},{"size":802,"mtime":1614009894901,"results":"58","hashOfConfig":"32"},{"size":6458,"mtime":1614009904528,"results":"59","hashOfConfig":"32"},{"size":1589,"mtime":1614008695703,"results":"60","hashOfConfig":"32"},{"size":2276,"mtime":1614009833958,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"102jj4c",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\index.js",[],["135","136"],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Router\\router.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Router\\userRouter.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\RenterPage.js",["137","138","139","140","141","142","143"],"import React, {useEffect, useState} from 'react';\r\nimport './RenterPage.css';\r\nimport PrivatePage from '../All/PrivatePage';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nexport default function RenterPage(props) {\r\n  let history = useHistory()\r\n\r\n  const [renterMessages, setRenterMessages] = useState(\"\");\r\n  const [user,setUser] = useState(\"\");\r\n  const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n  const [renterDeatilsId,setRenterDeatilsId] = useState(\"\");\r\n  const [wantedAsset,setWantedAsset] = useState(\"\");\r\n  const [userProps] = useState(props.location.user)\r\n  const [cookies] = useCookies(['user']);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/users/${cookies.user.id}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n          setUser(result)\r\n      })    \r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/renterDeatils/${cookies.user.id}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setRenterDeatils(result)\r\n        setRenterDeatilsId(result.id)\r\n      }) \r\n  }, [renterDeatils])\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets?RenterId=${cookies.user.id}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setWantedAsset(result)\r\n    })\r\n  }, [wantedAsset])\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/messages?RenterId=${cookies.user.id}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setRenterMessages(result)\r\n      })\r\n  }, [renterMessages])\r\n\r\n\r\n  return (\r\n      <div className={\"renterMainPage\"}>\r\n        <PrivatePage label1={\"In progress\"} label2={\"Asset place deatils\"} label3={\"Messages to my owner\"} \r\n        user={user} firstHead={\"Prsonal deatils\"} renterDeatils={renterDeatils} isRenter={true} messages={renterMessages} wantedAsset={wantedAsset[0]} />\r\n    </div>\r\n);\r\n}","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\OwnerPage.js",["144","145","146","147"],"import React, {useEffect, useState} from 'react';\r\nimport './OwnerPage.css';\r\nimport PrivatePage from '../All/PrivatePage';\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nexport default function OwnerPage1(props) {\r\n\r\n    const [user,setUser] = useState(\"\");\r\n    const [assets,setAssets] = useState(\"\");\r\n    const [messages,setOwnerMessages] = useState(\"\");\r\n    const [userProps] = useState(props.location.user)\r\n    const [cookies] = useCookies(['user']);\r\n\r\n    useEffect(() => {\r\n      fetch(`https://instarent-1st.herokuapp.com/api/users/${cookies.user.id}`, {credentials: 'include'})\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setUser(result)\r\n        })    \r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n      fetch(`https://instarent-1st.herokuapp.com/api/assets?OwnerId=${cookies.user.id}`, {credentials: 'include'})\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setAssets(result)\r\n        })     \r\n    }, [assets])\r\n\r\n    useEffect(() => {\r\n      fetch(`https://instarent-1st.herokuapp.com/api/messages?OwnerId=${cookies.user.id}`, {credentials: 'include'})\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setOwnerMessages(result)\r\n        }) \r\n    }, [messages])\r\n\r\n  return (\r\n    <div className={\"ownerMainPage\"}>\r\n      <PrivatePage label1={\"General\"} label2={\"My assets\"} label3={\"Messages\"} \r\n      firstHead={\"Prsonal deatils\"} user={user} assets={assets} messages={messages} isOwner={true} renterDeatils={-1}\r\n      />\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignIn.js",["148","149","150","151","152","153"],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\SignInDeatils.js",["154","155","156","157","158","159"],"import React, {useEffect, useState,useContext} from 'react';\r\nimport './SignInDeatils.css';\r\nimport Footer from '../All/Footer';\r\nimport AddDeatils from './addDeatils';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        marginLeft: '30%',\r\n    },\r\n\r\n}}));\r\n\r\nexport default function SignInDeatils (props) { \r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [userId] = useState(props.location.userId)\r\n  const [user,setUser] = useState(\"\");\r\n  const [cookies] = useCookies(['user']);\r\n  const [gender,setGender] = useState(\"\")\r\n  const [phone,setPhone] = useState(\"\")\r\n  const [country,setCountry] = useState(\"\")\r\n  const [age,setAge] = useState(\"\")\r\n  const [userDeatils,setUserDeatils] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/users/${cookies.user.id}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setUser(result)\r\n      })    \r\n  }, [])\r\n\r\n   const addAdditionalInformation = () => {\r\n      const body = { Phone: phone,Gender: gender,Country: country,Age:age};\r\n      fetch(`https://instarent-1st.herokuapp.com/api/users/${user.id}` ,{\r\n          method: 'PUT',\r\n          credentials: 'include',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify(body),\r\n      })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n          console.log(result)\r\n          setUserDeatils(result)\r\n          setGender(\"\")\r\n          setPhone(\"\")\r\n          setCountry(\"\")\r\n          setAge(\"\")\r\n          window.location = '/HomePage';\r\n      });\r\n  }\r\n\r\n    return (\r\n      <div className={'background'}>\r\n        <h1 className={\"headSignIn\"}>InstaRent</h1>\r\n        <div className={\"SignInDeatilsContainer\"}>\r\n          <p>Additional Information</p>\r\n          <form className={classes.root} autoComplete=\"off\"> \r\n        <div className={\"colForm\"}>\r\n          <div>\r\n          <TextField \r\n              id=\"Country\" \r\n              label=\"Country\" \r\n              name=\"Country\"\r\n              value={country} \r\n              onChange={e => setCountry(e.target.value)}\r\n              fullWidth\r\n              required\r\n          />\r\n          <TextField \r\n              id=\"Phone\" \r\n              label=\"Phone\" \r\n              name=\"Phone\"\r\n              value={phone} \r\n              onChange={e => setPhone(e.target.value)}\r\n              fullWidth\r\n          />\r\n          </div>\r\n          <div className={\"rowForm\"}>\r\n            <TextField \r\n                id=\"Age\" \r\n                label=\"Age\" \r\n                name=\"Age\"\r\n                value={age} \r\n                onChange={e => setAge(e.target.value)}\r\n                required\r\n            />\r\n            <FormControl >\r\n              <InputLabel id=\"Gender\">Gender</InputLabel>\r\n              <Select \r\n                labelId=\"Gender\" \r\n                id=\"Gender\"\r\n                value={gender} \r\n                onChange={e => setGender(e.target.value)}\r\n                fullWidth\r\n                required\r\n                >\r\n                <MenuItem value={\"Male\"}>Male</MenuItem>\r\n                <MenuItem value={\"Female\"}>Female</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n        </form>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addAdditionalInformation}>SEND</Button>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Renter\\RenterSearch.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PrivatePage.js",["160","161","162","163","164"],"import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Contract from '../All/Contract';\r\nimport Footer from '../All/Footer';\r\nimport NavBar from '../All/NavBar';\r\nimport MessageList from '../Message/MessageList';\r\nimport AssetDeatils from '../Asset/AssetDeatils';\r\nimport PrsonalDeatils from '../All/PersonalDeatils';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport HouseIcon from '@material-ui/icons/House';\r\nimport AddAsset from '../Owner/AddAsset';\r\nimport AssetTable from '../Owner/AssetTable';\r\nimport './PrivatePage.css';\r\nimport Map from '../All/Map';\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div role=\"tabpanel\" hidden={value !== index} id={`full-width-tabpanel-${index}`} aria-labelledby={`full-width-tab-${index}`} {...other} >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function PrivatePage(props) {\r\n  const theme = useTheme();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [openMessage, setOpenMessage] = useState(false);\r\n  const [openAsset, setOpenAsset] = useState(false);\r\n  const [timestamp, setTimestamp] = useState(\"\");\r\n  const [asset,setAsset] = useState(\"\");\r\n  const [cookies] = useCookies(['user']);\r\n\r\n\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const addMessage = () => {\r\n    let today = new Date();\r\n    console.log(today)\r\n    setTimestamp(today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate());\r\n    console.log(timestamp);\r\n    const body = { Message: message, RenterId: props.user.id, OwnerId: props.wantedAsset.OwnerId, Timestamp: timestamp };\r\n    fetch(`https://instarent-1st.herokuapp.com/api/messages`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setOpenMessage(false)\r\n        setMessage(result)\r\n        setMessage(\"\")\r\n      });\r\n  }\r\n\r\n  const giveUpOnAsset = () => {\r\n    console.log(props.wantedAsset)\r\n    const body = { RenterId: -1 }\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets/${props.wantedAsset.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setAsset(result)\r\n        alert(\"Tha asset is deletd from your proccess successfully!\")\r\n        console.log(result)\r\n        window.location.reload()\r\n      })\r\n  };\r\n\r\n  const tabs = () => {\r\n    if (props.isRenter) {\r\n      return (\r\n        <div className={\"currentContainer\"}>\r\n          <div className={\"curStatus\"}>\r\n            <h1>Current status</h1>\r\n            <p>Looking for rent appetmant in {props.renterDeatils.FavoriteCountry} </p>\r\n          </div>\r\n          <div className={\"curBud\"}>\r\n            <h1>Cuurent budget</h1>\r\n            <p>{props.renterDeatils.Budget} $</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <AddAsset idOwner={props.user.id} className={\"addAssetBig\"} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  // {console.log(props.wantedAsset)}\r\n  const wantedAsset = () => {\r\n    if (props.wantedAsset == null) {\r\n      return (\r\n        <Stepper active orientation=\"vertical\">\r\n          <Step >\r\n            <StepLabel style={{ fontFamily: 'Lato' }}></StepLabel>\r\n            <StepContent>\r\n              <Typography style={{ fontFamily: 'Lato' }}>You don't in proccess with owner yet, choose asset and start soon!</Typography>\r\n            </StepContent>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel style={{ fontFamily: 'Lato' }}>Asset rentering in proccess</StepLabel>\r\n          </Step>\r\n          <Step >\r\n            <StepLabel style={{ fontFamily: 'Lato' }}>Enjoy in your new journey!</StepLabel>\r\n          </Step>\r\n        </Stepper>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <Stepper active orientation=\"vertical\">\r\n          <Step >\r\n            <StepLabel style={{ fontFamily: 'Lato' }}>Request recived</StepLabel>\r\n            <StepContent>\r\n              <Typography style={{ fontFamily: 'Lato' }}>The owner of your wantes asset saw your reques and will be in touch soon</Typography>\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setOpenAsset(true)}>Asset deatils</Button>\r\n              <PopUp onSubmit={() => setOpenAsset(false)} wantAssetBtn={false} title={props.wantedAsset.Country} open={openAsset} closePopup={() => setOpenAsset(false)} sendBtn={false} showBt={true}>\r\n                <AssetDeatils item={props.wantedAsset} />\r\n              </PopUp>\r\n            </StepContent>\r\n          </Step>\r\n          <Step active>\r\n            <StepLabel style={{ fontFamily: 'Lato' }}>Asset rentering in proccess</StepLabel>\r\n            <StepContent>\r\n              <Typography style={{ fontFamily: 'Lato' }}>You can talk anytime you want with the owner in the chat and review on tour contract now</Typography>\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => setOpenMessage(true)}>message to owner</Button>\r\n              <PopUp onSubmit={addMessage} title={\"Send Message\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true} showBt={true}>\r\n                <TextField label=\"Message\" value={message} multiline rows={4} onChange={e => setMessage(e.target.value)} variant=\"outlined\" fullWidth required />\r\n              </PopUp>\r\n              <Contract isRenter={true} />\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => giveUpOnAsset()}>give up on this asset</Button>\r\n            </StepContent>\r\n          </Step>\r\n          <Step >\r\n            <StepLabel style={{ fontFamily: 'Lato' }}>Enjoy in your new journey!</StepLabel>\r\n            <StepContent>\r\n              <Typography style={{ fontFamily: 'Lato' }}></Typography>\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\">Chat</Button>\r\n              <Contract />\r\n            </StepContent>\r\n          </Step>\r\n        </Stepper>\r\n      )\r\n    }\r\n  }\r\n  const disableTabs = () => {\r\n    if (props.wantedAsset && props.isRenter) {\r\n      return (\r\n        <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\r\n        <Tab label={props.label1} {...a11yProps(0)} />\r\n        <Tab label={props.label2} {...a11yProps(1)} style={{ marginLeft: '8%' }} />\r\n        <Tab label={props.label3} {...a11yProps(2)} style={{ marginLeft: '6%' }} />\r\n      </Tabs>\r\n      )\r\n    }\r\n    if (!props.wantedAsset && props.isRenter){\r\n      <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\r\n          <Tab label={props.label1} {...a11yProps(0)} />\r\n          <Tab label={props.label2} {...a11yProps(1)} style={{ marginLeft: '8%' }} disabled/>\r\n          <Tab label={props.label3} {...a11yProps(2)} style={{ marginLeft: '6%' }} disabled/>\r\n        </Tabs>\r\n    }\r\n  }\r\n\r\n  const ownerTabs = () => {\r\n    <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\r\n        <Tab label={props.label1} {...a11yProps(0)} />\r\n        <Tab label={props.label2} {...a11yProps(1)} style={{ marginLeft: '8%' }} />\r\n        <Tab label={props.label3} {...a11yProps(2)} style={{ marginLeft: '6%' }} />\r\n      </Tabs> \r\n  }\r\n  const label1 = () => {\r\n    if (props.isRenter) {\r\n      return (\r\n        wantedAsset()\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className={\"ownerContainer\"}>\r\n          <div className={\"currentContainerRow\"}>\r\n            <div className={\"prsonalDetOwner\"}>\r\n              <MailOutlineIcon style={{ width: '20%', height: '20%', margin: '5%' }} />\r\n              <h3>My email</h3>\r\n              <p>{props.user.Email}</p>\r\n            </div>\r\n            <div className={\"prsonalDetOwner\"}>\r\n              <PhoneIcon style={{ width: '20%', height: '20%', margin: '5%' }} />\r\n              <h3>My phone</h3>\r\n              <p>{props.user.Phone}</p>\r\n            </div>\r\n          </div>\r\n          <h1>Assets deatils</h1>\r\n          <div className={\"currentContainerRow\"}>\r\n            <div className={\"prsonalDetOwner\"}>\r\n              <HouseIcon style={{ width: '20%', height: '20%', margin: '5%' }} />\r\n              <h3>Number of assets</h3>\r\n              <p>{props.assets.length}</p>\r\n            </div>\r\n            <div className={\"prsonalDetOwner\"}>\r\n              <MessageIcon style={{ width: '20%', height: '20%', margin: '5%' }} />\r\n              <h3>Messages</h3>\r\n              <p>{props.messages.length}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const label2 = () => {\r\n    if (props.isRenter) {\r\n      return (\r\n        <>\r\n          {/* <Map address={props.Country}/> */}\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <>\r\n          <h2>My assets</h2>\r\n          <AssetTable assetsList={props.assets} idOwner={props.user.id} googleIdRenter={props.user.id}/>\r\n          <AddAsset idOwner={props.user.id} />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const labeel3 = () => {\r\n    if (props.isRenter) {\r\n      return (\r\n        <>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" style={{ width: \"100%\" }} onClick={() => setOpenMessage(true)}>send message to owner</Button>\r\n          <PopUp onSubmit={addMessage} title={\"Send Message\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true} showBt={true}>\r\n            <TextField label=\"Message\" value={message} multiline rows={4} onChange={e => setMessage(e.target.value)} variant=\"outlined\" fullWidth required />\r\n          </PopUp>\r\n          <MessageList messageList={props.messages} renter={true} />\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <MessageList messageList={props.messages} renter={false} />\r\n      )\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={\"privatePage\"}>\r\n      <NavBar />\r\n      <div className={\"privatePageConatiner\"}>\r\n        <div className={\"personalDeatilsContainer\"}>\r\n          {/* {console.log(props.user.id)} */}\r\n          <PrsonalDeatils renterDeatilsId={props.renterDeatils.id} userId={props.user.id} FirstName={props.user.FirstName} LastName={props.user.LastName} JobTitle={props.user.JobTitle} Gender={props.Gender} Age={props.user.Age} Country={props.user.Country} ImageUrl={props.user.ImageUrl} idOwner={props.user.id} idRenter={props.user.id} />\r\n        </div>\r\n        <div className={\"containerOptions\"}>\r\n          {tabs()}\r\n          <div className={\"progressOwner\"}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n              {/* {props.isOwnerPage ? ownerTabs() : disableTabs()} */}\r\n              <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\r\n                <Tab label={props.label1} {...a11yProps(0)} />\r\n                <Tab label={props.label2} {...a11yProps(1)} style={{ marginLeft: '8%' }} />\r\n                <Tab label={props.label3} {...a11yProps(2)} style={{ marginLeft: '6%' }} />\r\n              </Tabs> \r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n              <h1>{props.firstHead}</h1>\r\n              <div className={\"progress\"}>\r\n                {label1()}\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              {label2()}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              {labeel3()}\r\n            </TabPanel>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\HomePage\\App.js",["165","166","167","168"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport PopUp from '../All/PopUp';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useCookies} from \"react-cookie\";\r\n\r\n\r\nexport default function App(props) {\r\n    let history = useHistory()\r\n    const [renterDeatilsPopUp,setRenterDeatilsPopUp] = useState(false)\r\n    const [favoriteCountry,setFavoriteCountry] = useState(\"\")\r\n    const [budget,setBudget] = useState(\"\")\r\n    const [jobTitle,serJobTitle] = useState(\"\")\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\")\r\n    const [positionPopUp,setPositionPopUp] = useState(true)\r\n    const [position,setPositionUser] = useState(\"\")\r\n    const [renter,setRenter] = useState(false)\r\n    const [owner,setOwner] = useState(false)\r\n    const [renterDeatilsExist,setRenterDeatilsExist] = useState(\"\")\r\n    const [cookies,setCookie] = useCookies(['user']);\r\n    const [user,setUser] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://instarent-1st.herokuapp.com/api/renterDeatils/${cookies.user.id}`, {credentials: 'include'})\r\n          .then(response => response.json())\r\n          .then(result =>  {\r\n            setRenterDeatilsExist(result)\r\n        })\r\n      }, [renterDeatilsExist])\r\n\r\n    useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/users/${cookies.user.id}`, {credentials: 'include'})\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            setUser(result)\r\n    })\r\n    }, [user])\r\n\r\n    const addRenterDeatils = () => {\r\n        const body = { JobTitle: jobTitle, Budget: budget, FavoriteCountry: favoriteCountry,RenterId: user.id ,googleID: user.googleID};\r\n        fetch(`https://instarent-1st.herokuapp.com/api/renterDeatils`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n        })\r\n          .then(response => response.json())\r\n          .then(result => {\r\n            setRenterDeatilsPopUp(false)\r\n            setRenterDeatils(result)\r\n            serJobTitle(\"\")\r\n            setBudget(\"\")\r\n            setFavoriteCountry(\"\")\r\n          });\r\n      }\r\n\r\n    const logout = () => {\r\n        fetch(`https://instarent-1st.herokuapp.com/api/auth/logout`, {credentials: 'include'})\r\n        .then(result => {\r\n            setCookie('user', '')\r\n            history.push('/')\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const setPosition = () => {\r\n        console.log(renter)\r\n        const body = {IsRenter:renter,IsOwner:owner};\r\n        fetch(`https://instarent-1st.herokuapp.com/api/users/${cookies.user.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setPositionUser(result);\r\n        })\r\n    }\r\n\r\n    // const renterDeatils = () => {\r\n    //     if(renterDeatilsExist)\r\n    // }\r\n\r\n      const chooseHomePage = () => {\r\n        if(renter === true) {\r\n            return (\r\n                <div className={\"buttons\"}>\r\n                    {renterDeatilsExistFunc()}\r\n                    <Link to={{ pathname: \"/RenterSearch\" , user:user, isRenter:true }}><Button onClick={() => setRenterDeatilsPopUp(true)}><p>I want to rent asset</p></Button></Link>\r\n                    <Link to={{ pathname: \"/Renter\" , user:user, isRenter:true }}><Button type={\"submit\"}><p>My renter page</p></Button></Link>\r\n                </div>\r\n                )\r\n            }\r\n        if(owner === true) {\r\n            return (\r\n                <div className={\"buttons\"}>\r\n                    <Button type={\"submit\"}><p>post asset</p></Button>\r\n                    <Link to={{ pathname: \"/OwnerPage\" , user:user, isRenter:false }}><Button type={\"submit\"}><p>My owner page</p></Button></Link>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n      const chooesPosition = () => {\r\n        // if(props.location.fromLogin) {\r\n            return (\r\n                <PopUp open={positionPopUp} title={\"Choose your position\"} closePopup={() => alert(\"you have to choose position to continue\")} showBt={false}>\r\n                    <div className={\"buttonsChoose\"} >\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {setRenter(true) ; setOwner(false); setPositionPopUp(false); setPosition()}}><p>I want to rent asset</p></Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {renterDeatils(); setOwner(true) ; setRenter(false); setPositionPopUp(false); setPosition()}}><p>I want to post asset</p></Button>\r\n                    </div>\r\n                </PopUp>\r\n                \r\n            )\r\n        // }\r\n      }\r\n      \r\n    \r\n      const renterDeatilsExistFunc = () => {\r\n          if(renterDeatilsExist == null) {\r\n              return (\r\n                <PopUp open={renterDeatilsPopUp} onSubmit={() => addRenterDeatils()} title={\"Insert deatils on your current position\"} closePopup={() => setRenterDeatilsPopUp(false)} showBt={true}>\r\n                    <TextField className=\"input\" label=\"Country\" size=\"large\" onChange={ (event) => serJobTitle(event.target.value) } value={ jobTitle } fullWidth required/>   \r\n                    <TextField className=\"input\" label=\"jobTitle\" size=\"large\" onChange={ (event) => setBudget(event.target.value) } value={ budget } fullWidth required/>   \r\n                    <TextField className=\"input\" label=\"budget\" size=\"large\" onChange={ (event) => setFavoriteCountry(event.target.value) } value={ favoriteCountry } fullWidth required/>   \r\n                </PopUp> \r\n              )\r\n          }\r\n      }\r\n\r\n    //   const insertDeatils = () => {\r\n    //       return (\r\n    //         <AddDeatils user={user}/>\r\n    //       )\r\n    //   }\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"background\"}> \r\n                <div className={'navBarHomePage'}>\r\n                    {chooesPosition()}\r\n                    <h1><a href=\"/HomePage\">InstaRent</a></h1>\r\n                    <div className={\"options\"}>\r\n                        <h3><Link to={{ pathname: '/HomePage'}}>About</Link></h3>\r\n                        <h3><Link to={{ pathname: '/RenterSearch' , user:user, renter:true }}>Search</Link></h3>\r\n                        <h3>Hello {user.FirstName} {user.LastName} </h3>\r\n                        <h3><Button onClick={logout} >LOGOUT</Button></h3>\r\n                    </div>\r\n                </div>\r\n                <div className={\"homePageContainer\"}>\r\n                    <div className={\"pictures\"}></div>\r\n                    <div className={\"explain\"}>\r\n                        <h1>Looking for apartment?</h1>\r\n                        <p> \r\n                            Lorem Ipsum is simply dummy text of the  printing and typesetting industry. \\n\r\n                            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\r\n                        </p>\r\n                    </div>\r\n                    {chooseHomePage()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Footer.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Contract.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetTable.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AddAsset.js",["169","170"],"import React, {useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport { Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AddAsset(props) {\r\n  let history = useHistory()\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n    const [squareFeet, setSquareFeet] = useState(\"\");\r\n    const [rooms, setRooms] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [parking, setParking] = useState(false);\r\n    const [elevator, setElevator] = useState(false);\r\n    const [petsAllowed, setPetsAllowed] = useState(false);\r\n    const [price, setPrice] = useState(\"\");\r\n    const [avilability, setAvilability] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [newAsset, setNewAsset] = useState(\"\");\r\n    const [add,setOpenAdd] = useState(false);\r\n\r\n    const assetValidation = () => {\r\n      let errors = [];\r\n      if (!moment(avilability, \"DD.MM.YYYY\").isValid())\r\n        errors.push(\"Invalid date, please insert a valid date in format of: DD.MM.YYYY.\\n\")\r\n      else if (moment().isAfter(moment(avilability, 'DD.MM.YYYY'))) \r\n        errors.push(\"Invalid date, please insert a valid date later then today. \\n\")\r\n      if (country === \"\")\r\n        errors.push(\"Country is requierd, please make sure the field is full. \\n\")\r\n      if (city === \"\")\r\n        errors.push(\"City is requierd, please make sure the field is full. \\n\")\r\n      if(price === \"\" )\r\n        errors.push(\"Price is requierd, please make sure the field is full. \\n\")\r\n      if(isNaN(price))\r\n        errors.push(\"Price must to be numbers. \\n\")\r\n      if (errors.length > 0)\r\n          alert(errors)\r\n      else\r\n          return true\r\n    }\r\n\r\n  const addAsset = () => {\r\n    if(assetValidation()) {\r\n      const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: props.idOwner,UrlPicture:imageUrl,RenterId:0};\r\n      fetch(`https://instarent-1st.herokuapp.com/api/assets`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setOpenAdd(false);\r\n          setNewAsset(result);\r\n          setCountry(\"\");\r\n          setCity(\"\");\r\n          setNeighborhood(\"\");\r\n          setStreet(\"\");\r\n          setZip(\"\");\r\n          setSquareFeet(\"\");\r\n          setRooms(\"\");\r\n          setCondition(\"\");\r\n          setParking(false);\r\n          setElevator(false);\r\n          setPetsAllowed(false);\r\n          setPrice(\"\");\r\n          setAvilability(\"\");\r\n          setDescription(\"\");\r\n          setImageUrl(\"\");\r\n        })\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div >\r\n      <Button variant=\"contained\" color=\"primary\" className={\"addButAsset\"} onClick={() => setOpenAdd(true)}>Add new asset</Button>\r\n      <PopUp onSubmit={addAsset} title={\"Add asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true} showBt={true}>\r\n        <div className={\"addAssetForm\"}>\r\n          <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth required/>\r\n          <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth required/>\r\n          <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n          <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n            <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n            <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n          </div>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} required/>\r\n            <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} required/>\r\n          </div>\r\n          <FormControl fullWidth > \r\n          <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n            <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n              <option aria-label=\"None\" value=\"Rooms\" />\r\n              <option >Great</option>\r\n              <option>Good</option>\r\n              <option>Bad</option>\r\n            </Select>\r\n          </FormControl>\r\n          <div className={\"rowOptions\"}>\r\n            <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {true} />} label=\"Parking\"/>\r\n            <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {true} />} label=\"Elevator\"/>\r\n            <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {true} />} label=\"Pets\"/>\r\n          </div>\r\n          <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n          <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n      </PopUp>\r\n   </div>\r\n  );\r\n}","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\Map.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Register\\addDeatils.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\NavBar.js",["171","172","173","174","175","176"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './NavBar.css';\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nexport default function NavBar(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n    let history = useHistory();\r\n\r\n    const logout = () => {\r\n        fetch(`https://instarent-1st.herokuapp.com/api/auth/logout`, {credentials: 'include'})\r\n        .then(result => {\r\n            setCookie('user', '')\r\n            history.push('/')\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const changePosition = () => {\r\n        return (\r\n            <p></p>\r\n        )\r\n    }\r\n\r\n    const navBarPosition = () => {\r\n            return ( \r\n                <>\r\n                    <div className={\"rowOptionsNavBar\"}>\r\n                        <h3><Link to={{ pathname: \"/\"}}>AboutUs</Link></h3>\r\n                        <h3><Link to={{ pathname: \"/Renter\",user:props.userId}}>Hello {cookies.user.FirstName} {cookies.user.LastName}</Link></h3>\r\n                    </div> \r\n                    <div className={\"menu\"}>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={logout} style={{color:'white', fontFamily: 'Lato',fontWeight: 'bold', fontSize: '100%'}}>\r\n                        LOGOUT\r\n                    </Button>\r\n                    </div>\r\n                </>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className={\"navBar\"}>\r\n            <h1><Link to={{ pathname: \"/HomePage\", userId: props.userId}} position={props.position}>InstaRent</Link></h1>\r\n            {navBarPosition()}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PopUp.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\MessageList.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\PersonalDeatils.js",["177","178","179"],"import React, { useState} from 'react';\r\nimport './PrsonalDeatils.css';\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function RenterPage(props) {\r\n    const [openEdit,setOpenEdit] = useState(false);\r\n    const [jobTitle,setJob] = useState(\"\");\r\n    const [budget,setBudget] = useState(\"\");\r\n    const [favoriteCountry,setFavoriteCountry] = useState(\"\");\r\n    const [phone,setPhone] = useState(\"\");\r\n    const [country,setCountry] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [renterDeatils,setRenterDeatils] = useState(\"\");\r\n    const [owner,setOwner] = useState(\"\");\r\n\r\n    const validatePhone = () => {        \r\n        let errors = [];\r\n        if(phone !== \"\") {\r\n            if(isNaN(phone)) {\r\n                errors.push(\"You have entered an invalid phone number, please insert another one \\n\")\r\n            }\r\n        }\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n    }\r\n\r\n    const validateBudget = () => {        \r\n        let errors = [];\r\n        if(budget !== \"\") {\r\n            if(isNaN(budget)) {\r\n                errors.push(\"You have entered an invalid budget, please insert another one \\n\")\r\n            }\r\n        }\r\n        if (errors.length > 0)\r\n            alert(errors)\r\n        else\r\n            return true\r\n    }\r\n\r\n    const editRenter = () => {\r\n        if(validateBudget()) {\r\n            console.log(props.userId.id)\r\n            const body = { JobTitle: jobTitle,Budget:budget,FavoriteCountry: favoriteCountry};\r\n            fetch(`https://instarent-1st.herokuapp.com/api/renterDeatils/${props.renterDeatilsId}` ,{\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setOpenEdit(false);\r\n                setRenterDeatils(result)\r\n                setJob(\"\")\r\n                setBudget(\"\")\r\n                setFavoriteCountry(\"\")\r\n            });\r\n        }\r\n      }\r\n\r\n      const editOwner = () => {\r\n        if(validatePhone()) {\r\n            const body = { Country: country,Email:email,Phone:phone};\r\n            fetch(`https://instarent-1st.herokuapp.com/api/users/${props.userId}` ,{\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setOpenEdit(false);\r\n                setOwner(result)\r\n                setCountry(\"\")\r\n                setEmail(\"\")\r\n                setPhone(\"\")\r\n            });\r\n        }\r\n      }\r\n      \r\n      const isRenter = () => {\r\n          return (\r\n              <>\r\n                <div><Button style={{marginBottom:'5%'}} variant=\"contained\" color=\"primary\" onClick={() => setOpenEdit(true)}>Edit</Button></div>   \r\n                <PopUp onSubmit={editRenter} title={\"Edit User\"} open={openEdit} closePopup={() => setOpenEdit(false)} sendBtn={true} showBt={true}>\r\n                    <TextField label=\"JobTitle\" value={jobTitle} onChange={e => setJob(e.target.value)} fullWidth required/>\r\n                    <TextField label=\"Budget\" value={budget} onChange={e => setBudget(e.target.value)} fullWidth required/>\r\n                    <TextField label=\"Favorite country\" value={favoriteCountry} onChange={e => setFavoriteCountry(e.target.value)} fullWidth required/>\r\n                </PopUp>\r\n            </>\r\n          )\r\n      }\r\n\r\n      const isOwner = () => {\r\n        return (\r\n            <>\r\n              \r\n          </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\"personalDeatils\"}>\r\n            <img src={props.ImageUrl} alt=\"profile\" />\r\n            <h1>{props.FirstName} {props.LastName}</h1>\r\n            <h3>{props.JobTitle}</h3>\r\n            <div className={\"line\"}></div>\r\n            <p>Gender</p>\r\n            <span>{props.Gender}</span>\r\n            <p>Age</p>\r\n            <span>{props.Age}</span>\r\n            <p>Country</p>\r\n            <span>{props.Country}</span>\r\n            {props.renter ? isRenter() : isOwner()} \r\n        </div>\r\n\r\n\t);\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\AssetSearch\\AssetSearchForm.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetDeatils.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetTab.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Message\\Message.js",["180","181"],"import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport PopUp from '../All/PopUp';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '95%',\r\n        margin: '2%',\r\n    },\r\n    \r\n});\r\n\r\nexport default function Message (props) {\r\n    const classes = useStyles();\r\n    const [openMessage,setOpenMessage] = useState(\"\");\r\n    const [answer,setAnswer] = useState(\"\");\r\n\r\n    const addAnswer = () => {\r\n        const body = {Answer:answer};\r\n        fetch(`https://instarent-1st.herokuapp.com/api/messages/${props.item.id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setOpenMessage(false);\r\n            setAnswer(result);\r\n        })\r\n    }\r\n    \r\n    const answerBtn = () => {\r\n        if(!props.renter) {\r\n            return (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenMessage(true)}>\r\n                    Send answer\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const haveAnswer = () => {\r\n        if(props.item.Answer != null){\r\n            return (\r\n                <>\r\n                    <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                        Answer:\r\n                    </Typography>\r\n                    <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                        <p>{props.item.Answer}</p>\r\n                    </Typography>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                answerBtn()\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography component=\"h5\" style={{fontFamily: 'Lato',overflow: 'hidden',fontWeight: 'bold'}}>\r\n                    {props.item.Timestamp} <br/><br/>\r\n                    Meesage:\r\n                </Typography>\r\n                <div>\r\n                <Typography component=\"h5\" color=\"textSecondary\" component=\"subtitle2\" style={{fontFamily: 'Lato',fontWeight: 'bold',marginTop:'5%'}}>\r\n                    <p>{props.item.Message}</p>\r\n                </Typography>\r\n                </div>\r\n                <div>\r\n                   {haveAnswer()}\r\n                </div>\r\n                <PopUp onSubmit={addAnswer} title={\"Send answer\"} open={openMessage} closePopup={() => setOpenMessage(false)} sendBtn={true} showBt={true}>\r\n                    <TextField id=\"outlined-multiline-static\" label=\"Answer\"  multiline rows={4} onChange={(event) => setAnswer(event.target.value)} value={answer} variant=\"outlined\" fullWidth/>\r\n                </PopUp>\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}\r\n\r\n","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetsList.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\All\\UserDeatils.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetDelete.js",["182"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function AssetDelete(props) {\r\n    const [asset, setAsset] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`https://instarent-1st.herokuapp.com/api/assets/${props.idAsset}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(result =>  {\r\n\t\t\tsetAsset(result)\r\n\t\t})  \r\n\t},[asset])\r\n  \r\n    const deleteAsset = () => {\r\n\t\tfetch(`https://instarent-1st.herokuapp.com/api/assets/${asset.id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(result => {})\r\n\t}\r\n  return (\r\n    <div className={\"deleteAssetContainer\"}>\r\n        <Button variant=\"contained\" color=\"primary\" className={\"but\"} onClick={deleteAsset}>DELETE</Button>\r\n   </div>\r\n  );\r\n}","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Owner\\AssetEdit.js",["183","184"],"import React, {useEffect, useState} from 'react';\r\nimport './AddAsset.css';\r\nimport PopUp from '../All/PopUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport { Button } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nexport default function AddAsset(props) {\r\n\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [neighborhood, setNeighborhood] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [squareFeet, setSquareFeet] = useState(\"\");\r\n  const [rooms, setRooms] = useState(\"\");\r\n  const [condition, setCondition] = useState(\"\");\r\n  const [parking, setParking] = useState(false);\r\n  const [elevator, setElevator] = useState(false);\r\n  const [petsAllowed, setPetsAllowed] = useState(false);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [avilability, setAvilability] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [editedAsset, setEditAsset] = useState(\"\");\r\n  const [asset, setAsset] = useState(\"\");\r\n  const [add,setOpenAdd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets/${props.idAsset}`)\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n          setAsset(result)\r\n      })\r\n  }, [asset])\r\n\r\n  const dateAndPriceValidation = () => {\r\n    let errors = [];\r\n    if(avilability !== \"\") {\r\n      if (!moment(avilability, \"DD.MM.YYYY\").isValid())\r\n        errors.push(\"Invalid date, please insert a valid date in format of: DD.MM.YYYY.\\n\")\r\n      else if (moment().isAfter(moment(avilability, 'DD.MM.YYYY'))) \r\n        errors.push(\"Invalid date, please insert a valid date later then today. \\n\")\r\n      }\r\n      if(price !== \"\" ) {\r\n        if(isNaN(price)) {\r\n          errors.push(\"Price must to be numbers. \\n\")\r\n        }\r\n      }\r\n      if (errors.length > 0)\r\n          alert(errors)\r\n      else\r\n          return true\r\n  }\r\n\r\n  const editAsset = () => {\r\n    if(dateAndPriceValidation()) {\r\n      const body = {City: city, Street: street, Zip: zip, Country: country, Neighborhood: neighborhood, Rooms: rooms, SquareFeet: squareFeet,  Parking: parking, Elevator: elevator, PetsAllowed: petsAllowed, Condition: condition, Price: price, Avilability: avilability, Description: description,OwnerId: props.idOwner,UrlPicture:imageUrl};\r\n      fetch(`https://instarent-1st.herokuapp.com/api/assets/${asset.id}` ,{\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setOpenAdd(false);\r\n          setEditAsset(result);\r\n          setCountry(\"\");\r\n          setCity(\"\");\r\n          setNeighborhood(\"\");\r\n          setStreet(\"\");\r\n          setZip(\"\");\r\n          setSquareFeet(\"\");\r\n          setRooms(\"\");\r\n          setCondition(\"\");\r\n          setParking(\"\");\r\n          setElevator(\"\");\r\n          setPetsAllowed(\"\");\r\n          setPrice(\"\");\r\n          setAvilability(\"\");\r\n          setDescription(\"\");\r\n          setImageUrl(\"\");\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={\"addAssetContainer\"}>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenAdd(true)} className={\"but\"}>EDIT</Button>\r\n      <PopUp onSubmit={editAsset} title={\"Edit asset\"} open={add} closePopup={() => setOpenAdd(false)} sendBtn={true} showBt={true}>\r\n        <div className={\"addAssetForm\"}>\r\n          <TextField label=\"Country\" onChange={(event) => setCountry(event.target.value)} value={country} fullWidth/>\r\n          <TextField label=\"City\" onChange={(event) => setCity(event.target.value)} value={city} fullWidth/>\r\n          <TextField label=\"Neighborhood\" onChange={(event) => setNeighborhood(event.target.value)} value={neighborhood} fullWidth/>\r\n          <TextField label=\"Street\" onChange={(event) => setStreet(event.target.value)} value={street} fullWidth/>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Zip\" className={\"inputRow\"} onChange={(event) => setZip(event.target.value)} value={zip} />\r\n            <TextField label=\"Floors\" className={\"inputRow\"} onChange={(event) => setSquareFeet(event.target.value)} value={squareFeet} />\r\n            <TextField label=\"Rooms\" className={\"inputRow\"} onChange={(event) => setRooms(event.target.value)} value={rooms} />\r\n          </div>\r\n          <div className={\"rowOptions\"}>\r\n            <TextField label=\"Avilability\" className={\"inputRow\"} onChange={(event) => setAvilability(event.target.value)} value={avilability} />\r\n            <TextField label=\"Price\" className={\"inputRow\"}  onChange={(event) => setPrice(event.target.value)} value={price} />\r\n          </div>\r\n          <FormControl fullWidth > \r\n            <InputLabel htmlFor=\"age-native-simple\">Condition</InputLabel>\r\n              <Select native value={condition} onChange={e => setCondition(e.target.value)}>\r\n                <option aria-label=\"None\" value=\"Rooms\" />\r\n                <option >Great</option>\r\n                <option>Good</option>\r\n                <option>Bad</option>\r\n              </Select>\r\n          </FormControl>\r\n          <div className={\"rowOptions\"}>\r\n              <FormControlLabel control={<Checkbox onChange={e => setParking(e.target.value)} color=\"primary\" value = {parking} />} label=\"Parking\"/>\r\n              <FormControlLabel control={<Checkbox onChange={e => setElevator(e.target.value)} color=\"primary\" value = {elevator} />} label=\"Elevator\"/>\r\n              <FormControlLabel control={<Checkbox onChange={e => setPetsAllowed(e.target.value)} color=\"primary\" value = {petsAllowed} />} label=\"Pets\"/>\r\n          </div>\r\n          <TextField id=\"outlined-multiline-static\" label=\"description\"  multiline rows={4} onChange={(event) => setDescription(event.target.value)} value={description} variant=\"outlined\" fullWidth/>\r\n          <TextField label=\"Image Url\" onChange={(event) => setImageUrl(event.target.value)} value={imageUrl} name=\"imageUrl\" fullWidth/>\r\n        </div>\r\n      </PopUp>\r\n   </div>\r\n  );\r\n}","C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetCard.js",[],"C:\\Users\\User\\Documents\\Distributed Cloud Services\\Insta-rent\\src\\Components\\Asset\\AssetPage.js",["185"],"import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AssetDeatils from '../Asset/AssetDeatils';\r\nimport PopUp from '../All/PopUp';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nexport default function AssetPage(props) {\r\n  let history = useHistory();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [asset, setAsset] = useState(\"\");\r\n  const [cookies] = useCookies(['user']);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets?RenterId=${cookies.user.id}`, {credentials: 'include'})\r\n      .then(response => response.json())\r\n      .then(result =>  {\r\n        setAsset(result)\r\n      })    \r\n  },[asset])\r\n\r\n  // console.log(asset)\r\n\r\n  const wantIt = () => {\r\n    console.log(cookies.user.id)\r\n    const body={RenterId: cookies.user.id}\r\n    fetch(`https://instarent-1st.herokuapp.com/api/assets/${props.item.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(body),\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => { \r\n          let path = '/Renter'\r\n          alert(\"The owner will contact with you soon as possible\")\r\n          history.push({\r\n            pathname: path,\r\n            user: result\r\n          })\r\n        })\r\n    };\r\n\r\n    const haveAsset = () => {\r\n      if(asset === \"[]\") {\r\n        return (\r\n          <Button variant=\"outlined\" color=\"primary\" style={{margin:'2%'}} onClick={() => wantIt()} disabled>I wnat this asset</Button>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Button variant=\"outlined\" color=\"primary\" style={{margin:'2%'}} onClick={() => wantIt()}>I wnat this asset</Button>\r\n        )\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"buttonsAssets\"}>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen(true)} style={{margin:'2%'}}>Show deatils</Button>\r\n        {haveAsset()}\r\n      </div>\r\n        <PopUp onSubmit={() => setOpen(false)} WantAsset={true} title={props.item.Country} open={open} closePopup={() => setOpen(false)} showBt={true}>\r\n            <AssetDeatils item={props.item} />\r\n        </PopUp>\r\n    </div>\r\n  );\r\n}",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":8,"column":7,"nodeType":"192","messageId":"193","endLine":8,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":13,"column":10,"nodeType":"192","messageId":"193","endLine":13,"endColumn":25},{"ruleId":"190","severity":1,"message":"195","line":15,"column":10,"nodeType":"192","messageId":"193","endLine":15,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":25,"column":6,"nodeType":"198","endLine":25,"endColumn":12,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"197","line":34,"column":6,"nodeType":"198","endLine":34,"endColumn":21,"suggestions":"200"},{"ruleId":"196","severity":1,"message":"197","line":42,"column":6,"nodeType":"198","endLine":42,"endColumn":19,"suggestions":"201"},{"ruleId":"196","severity":1,"message":"197","line":50,"column":6,"nodeType":"198","endLine":50,"endColumn":22,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"195","line":11,"column":12,"nodeType":"192","messageId":"193","endLine":11,"endColumn":21},{"ruleId":"196","severity":1,"message":"197","line":20,"column":8,"nodeType":"198","endLine":20,"endColumn":14,"suggestions":"203"},{"ruleId":"196","severity":1,"message":"197","line":28,"column":8,"nodeType":"198","endLine":28,"endColumn":16,"suggestions":"204"},{"ruleId":"196","severity":1,"message":"197","line":36,"column":8,"nodeType":"198","endLine":36,"endColumn":18,"suggestions":"205"},{"ruleId":"190","severity":1,"message":"206","line":1,"column":16,"nodeType":"192","messageId":"193","endLine":1,"endColumn":24},{"ruleId":"190","severity":1,"message":"207","line":1,"column":26,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"208","line":1,"column":37,"nodeType":"192","messageId":"193","endLine":1,"endColumn":46},{"ruleId":"190","severity":1,"message":"209","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":17},{"ruleId":"190","severity":1,"message":"210","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":31},{"ruleId":"190","severity":1,"message":"211","line":26,"column":10,"nodeType":"192","messageId":"193","endLine":26,"endColumn":17},{"ruleId":"190","severity":1,"message":"207","line":1,"column":36,"nodeType":"192","messageId":"193","endLine":1,"endColumn":46},{"ruleId":"190","severity":1,"message":"212","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":26,"column":9,"nodeType":"192","messageId":"193","endLine":26,"endColumn":16},{"ruleId":"190","severity":1,"message":"213","line":29,"column":10,"nodeType":"192","messageId":"193","endLine":29,"endColumn":16},{"ruleId":"190","severity":1,"message":"214","line":36,"column":10,"nodeType":"192","messageId":"193","endLine":36,"endColumn":21},{"ruleId":"196","severity":1,"message":"197","line":44,"column":6,"nodeType":"198","endLine":44,"endColumn":8,"suggestions":"215"},{"ruleId":"190","severity":1,"message":"216","line":29,"column":8,"nodeType":"192","messageId":"193","endLine":29,"endColumn":11},{"ruleId":"190","severity":1,"message":"217","line":62,"column":10,"nodeType":"192","messageId":"193","endLine":62,"endColumn":15},{"ruleId":"190","severity":1,"message":"211","line":63,"column":10,"nodeType":"192","messageId":"193","endLine":63,"endColumn":17},{"ruleId":"190","severity":1,"message":"218","line":187,"column":9,"nodeType":"192","messageId":"193","endLine":187,"endColumn":20},{"ruleId":"190","severity":1,"message":"219","line":206,"column":9,"nodeType":"192","messageId":"193","endLine":206,"endColumn":18},{"ruleId":"190","severity":1,"message":"220","line":8,"column":10,"nodeType":"192","messageId":"193","endLine":8,"endColumn":20},{"ruleId":"190","severity":1,"message":"221","line":20,"column":12,"nodeType":"192","messageId":"193","endLine":20,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":34,"column":10,"nodeType":"198","endLine":34,"endColumn":30,"suggestions":"222"},{"ruleId":"196","severity":1,"message":"197","line":42,"column":8,"nodeType":"198","endLine":42,"endColumn":14,"suggestions":"223"},{"ruleId":"190","severity":1,"message":"191","line":15,"column":7,"nodeType":"192","messageId":"193","endLine":15,"endColumn":14},{"ruleId":"190","severity":1,"message":"224","line":31,"column":12,"nodeType":"192","messageId":"193","endLine":31,"endColumn":20},{"ruleId":"190","severity":1,"message":"225","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":12},{"ruleId":"190","severity":1,"message":"226","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":16},{"ruleId":"190","severity":1,"message":"227","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":18},{"ruleId":"190","severity":1,"message":"228","line":14,"column":9,"nodeType":"192","messageId":"193","endLine":14,"endColumn":20},{"ruleId":"190","severity":1,"message":"229","line":18,"column":9,"nodeType":"192","messageId":"193","endLine":18,"endColumn":20},{"ruleId":"190","severity":1,"message":"230","line":32,"column":11,"nodeType":"192","messageId":"193","endLine":32,"endColumn":25},{"ruleId":"190","severity":1,"message":"231","line":15,"column":12,"nodeType":"192","messageId":"193","endLine":15,"endColumn":25},{"ruleId":"190","severity":1,"message":"232","line":16,"column":12,"nodeType":"192","messageId":"193","endLine":16,"endColumn":17},{"ruleId":"190","severity":1,"message":"233","line":64,"column":13,"nodeType":"192","messageId":"193","endLine":64,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":54,"column":70,"nodeType":"236","endLine":54,"endColumn":91},{"ruleId":"234","severity":1,"message":"235","line":76,"column":66,"nodeType":"236","endLine":76,"endColumn":87},{"ruleId":"196","severity":1,"message":"237","line":14,"column":4,"nodeType":"198","endLine":14,"endColumn":11,"suggestions":"238"},{"ruleId":"190","severity":1,"message":"239","line":30,"column":10,"nodeType":"192","messageId":"193","endLine":30,"endColumn":21},{"ruleId":"196","severity":1,"message":"237","line":40,"column":6,"nodeType":"198","endLine":40,"endColumn":13,"suggestions":"240"},{"ruleId":"196","severity":1,"message":"197","line":21,"column":5,"nodeType":"198","endLine":21,"endColumn":12,"suggestions":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'renterDeatilsId' is assigned a value but never used.","'userProps' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies.user.id'. Either include it or remove the dependency array.","ArrayExpression",["244"],["245"],["246"],["247"],["248"],["249"],["250"],"'useState' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'userEvent' is defined but never used.","'ControlPointDuplicate' is defined but never used.","'cookies' is assigned a value but never used.","'AddDeatils' is defined but never used.","'userId' is assigned a value but never used.","'userDeatils' is assigned a value but never used.",["251"],"'Map' is defined but never used.","'asset' is assigned a value but never used.","'disableTabs' is assigned a value but never used.","'ownerTabs' is assigned a value but never used.","'makeStyles' is defined but never used.","'position' is assigned a value but never used.",["252"],["253"],"'newAsset' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'changePosition' is assigned a value but never used.","'renterDeatils' is assigned a value but never used.","'owner' is assigned a value but never used.","'editOwner' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'props.idAsset'. Either include it or remove the dependency array.",["254"],"'editedAsset' is assigned a value but never used.",["255"],["256"],"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"257","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"257","fix":"274"},{"desc":"275","fix":"276"},{"desc":"275","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [cookies.user.id, user]",{"range":"280","text":"281"},"Update the dependencies array to be: [cookies.user.id, renterDeatils]",{"range":"282","text":"283"},"Update the dependencies array to be: [cookies.user.id, wantedAsset]",{"range":"284","text":"285"},"Update the dependencies array to be: [cookies.user.id, renterMessages]",{"range":"286","text":"287"},{"range":"288","text":"281"},"Update the dependencies array to be: [assets, cookies.user.id]",{"range":"289","text":"290"},"Update the dependencies array to be: [cookies.user.id, messages]",{"range":"291","text":"292"},"Update the dependencies array to be: [cookies.user.id]",{"range":"293","text":"294"},"Update the dependencies array to be: [cookies.user.id, renterDeatilsExist]",{"range":"295","text":"296"},{"range":"297","text":"281"},"Update the dependencies array to be: [asset, props.idAsset]",{"range":"298","text":"299"},{"range":"300","text":"299"},"Update the dependencies array to be: [asset, cookies.user.id]",{"range":"301","text":"302"},[908,914],"[cookies.user.id, user]",[1210,1225],"[cookies.user.id, renterDeatils]",[1478,1491],"[cookies.user.id, wantedAsset]",[1752,1768],"[cookies.user.id, renterMessages]",[715,721],[992,1000],"[assets, cookies.user.id]",[1276,1286],"[cookies.user.id, messages]",[1532,1534],"[cookies.user.id]",[1414,1434],"[cookies.user.id, renterDeatilsExist]",[1683,1689],[405,412],"[asset, props.idAsset]",[1660,1667],[732,739],"[asset, cookies.user.id]"]